#!/bin/sh

# this script backs up the database and rotates through 5 days worth of 
# backups before deleting the oldest one.

# strategy:
# 1) rotate the backup files
# 2) backup database with pg_dump
# 3) compress backup file
# 4) vacuum the database

# overall backup directory, set in build.properties
BACKUP_DIR=@backupDir@

# for naming the file
TS=`date +%d%b%G`

# name of the file produced by the backup:
BACKUP_FILE_PATH=$BACKUP_DIR/vegbank$TS.sql
# compressed backup file name:
BACKUP_FILE_PATH_ZIP=$BACKUP_FILE_PATH.bz2

# command to backup
PG_DUMP=@pgdumpPath@

# ###########################################
# ########### START THE BACKUP
# ###########################################

# rotate: save 5 days of backups and delete the oldest one
rm $BACKUP_DIR/5dayold.bz2
mv $BACKUP_DIR/4dayold.bz2 $BACKUP_DIR/5dayold.bz2
mv $BACKUP_DIR/3dayold.bz2 $BACKUP_DIR/4dayold.bz2
mv $BACKUP_DIR/2dayold.bz2 $BACKUP_DIR/3dayold.bz2
mv $BACKUP_DIR/1dayold.bz2 $BACKUP_DIR/2dayold.bz2
mv $BACKUP_DIR/vegbank*.bz2 $BACKUP_DIR/1dayold.bz2

# copy the database, using properties set in build.properties and filtered out here:
$PG_DUMP -U @databaseUser@ --no-owner --no-privileges @databaseName@ > $BACKUP_FILE_PATH

# compress
bzip2 -f --best $BACKUP_FILE_PATH

# perform a VACUUM ANALYZE after the backup operation
# note for this to work your pg_hba.conf file must be setup
# for local trust authentication, not password
vacuumdb -z @databaseName@ -U @databaseUser@
