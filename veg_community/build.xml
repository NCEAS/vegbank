<?xml version="1.0"?>
<!-- 
	*
	*
	*  '$RCSfile: build.xml,v $'
  *    Authors: @authors@
  *    Release: @release@
  *
  *   '$Author: farrell $'
  *     '$Date: 2003-05-06 17:32:49 $'
  * '$Revision: 1.11 $'
  *
  *	Authors: John Harris
  *	Copyright: 2000 Regents of the University of California and the
  *           National Center for Ecological Analysis and Synthesis
  *  Build file for the Ant cross-platform build system for metacat
  *  See http://jakarta.apache.org for details on Ant  
  *  
  * This build file will build the plot database access 
  * module and insert into a working version of the plots 
  * database an xml plot record, then query that database
  * for all plots containing a taxon containing the string
  * "Carya".
  * usage: ant [compile|jar|install|jdoc]
--> 
<project name="community" default="compile" basedir=".">
	
  
  <target name="init">
	  <tstamp/>

	
	  <!-- NOTICE THE DIFFERENCES BETWEEN THE DEV AND PRODUCTION SERVLETS-->
	  <property name="servlet_lib" value="/usr/local/devtools/jakarta-tomcat/webapps/framework/WEB-INF/lib/" />

	  <property name="current" value="./" />
    <property name="toplib" value="${basedir}/../lib"/>
  	<property name="build.dir" value="${basedir}/build" />
    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="build.src.dir" value="${build.dir}/src"/>
    <property name="build.src.java.dir" value="${build.src.dir}/java"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="src" value="src" />
  	<property name="lib" value="./lib" />
	  <property name="xml_dir" value="./xml"/>
  	<property name="jdbc" value="../lib/jdbc7.0-1.2.jar" />
	  <property name="cpath" value="${jdbc}:${build.dir}:.:${toplib}/vegclass_common.jar:${toplib}/vegbank_datamodel.jar"/>
	
    <!-- FIXME: Move into higher level -->
    <property name="hostname" value="beta.nceas.ucsb.edu"/>

    <filter token="ant.project.name" value="${ant.project.name}"/>
    <filter token="database.hostname" value="${hostname}"/>

  </target>

  <!-- PREPARE -->
  <target name="prepare" depends="init" description="==> prepares the project">
	  <mkdir dir="${build.dir}" />
    <mkdir dir="${build.lib.dir}"/>
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${build.src.java.dir}"/>
    <mkdir dir="${build.classes.dir}"/>

    <copy todir="${build.src.java.dir}"> 
      <fileset dir="${src}" includes="**/*java"/>
    </copy>
  </target>	
	
	<!-- COMPILE -->
<target name="compile" depends="prepare"  description="==> compiles the community loaders">

  <javac srcdir="${build.src.java.dir}" 
    debug="off"
		classpath="${cpath}"
		destdir="${build.classes.dir}"
	>
  </javac>
	
</target>	

<!-- JAR -->	
<target name="jar" depends="compile" description="==> creates the jar archive" >
	<jar jarfile ="${build.lib.dir}/vegcommunity.jar"
		basedir="${build.classes.dir}"
		includes="**/**"
  >
    <fileset dir="${build.src.java.dir}" casesensitive="yes"/>
  </jar>
</target>		

<!-- DISTWEB  -->	
<target name="dist-web" depends="jar"  description="==> copies the jar files to the webdir">
	<echo>copying jar to web server: ${servlet_lib}</echo>
	<copy file="${build.lib.dir}/vegcommunity.jar" 
			filtering="no" 
			todir="${servlet_lib}/" 
	/>
</target>		

<!-- DISTXML  -->	
<target name="dist-xml" depends="init" description="==> copies the xml resources (dtd'd and stylesheets) to the webdirectory" >
	<echo>copying xml resources from ${xml_dir} to web server: ${servlet_lib}</echo>
	<copy file="${xml_dir}/showCommunitySummary.xsl" 
			filtering="no" 
			todir="${servlet_lib}/" 
	/>
</target>	

<target name="deploy" depends="dist-web, dist-xml" 
        description="==> deploys all the veg_community resources">
</target>

  <target name="clean" depends="init" description="Remove all generated files">
      <delete dir="${build.dir}"/>
  </target>
</project>
