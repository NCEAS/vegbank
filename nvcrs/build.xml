<?xml version="1.0"?>
<!-- 
  * build.xml
  *
  * Build script for the NVCRS web application.
  *
  *     '$Id: build.xml,v 1.1.1.1 2004-04-21 17:09:25 anderson Exp $'
--> 
<project name="nvcrs" default="war" basedir=".">

  <!-- ================================================================= -->
  <!-- Initialize simple properties                                      -->
  <!-- ================================================================= -->
  <target name="init">
  <echo>init</echo>
    <tstamp/>

    <!-- Load volatile properties from a file -->
    <echo>Loading props file: build.properties</echo>
    <property file="build.properties"/>
    
    <property environment="env" />
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="web.dir" value="${basedir}/web"/>
    <property name="web-inf.dir" value="${web.dir}/WEB-INF"/>
    <property name="src.java.dir" location="${src.dir}/java" />
    <property name="sql.src.dir" value="${src.dir}/sql"/>

    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.src.dir" value="${build.dir}/src"/>
    <property name="build.src.sql.dir" value="${build.src.dir}/sql"/>
    <property name="build.src.java.dir" value="${build.src.dir}/java"/>   
    <property name="build.web.dir" value="${build.dir}/web"/>
    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>   
    <property name="build.docs.dir" value="${build.dir}/docs"/>
    <property name="build.docs.api.dir" value="${build.docs.dir}/javadoc"/>

    <property name="webapp.name" value="nvcrs" />
    <property name="webapp.root" location="${env.TOMCAT_HOME}/webapps" />
    <property name="webapp.context" location="${webapp.root}/${webapp.name}" />
    <property name="webapp.inf" location="${webapp.context}/WEB-INF" /> 
    <property name="webapp.lib.dir" location="${webapp.inf}/lib" /> 
   
  </target>
	
  <!-- ================================================================= -->
  <!-- Read properties file, Setup filters, etc.                         -->
  <!-- ================================================================= -->
  <target name="prepare" depends="init">

  <echo>prepare</echo>
    <!--
      * The following filters expect the database connection properties
      * be set in the user custom build.properties file. There is an example 
      * of this file in cvs.
    -->
    <filter token="databaseType" value="${databaseType}" />
    <filter token="databaseUser" value="${databaseUser}" />
    <filter token="databaseUserPassword" value="${databaseUserPassword}" />
    <filter token="databasePort" value="${databasePort}" />
    <filter token="hostname" value="${hostname}"/>
    <filter token="databaseDriverType" value="${databaseDriverType}" />
    <filter token="databaseDriverClass" value="${databaseDriverClass}" />
    <filter token="databaseConnectString" value="${databaseConnectString}"/>
    <filter token="databaseName" value="${databaseName}" />

    <!--
      * Make all the build directories
    --> 
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${build.lib.dir}"/>
    <mkdir dir="${build.src.sql.dir}"/>
    <mkdir dir="${build.src.java.dir}"/>  
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${build.docs.dir}"/>
    <mkdir dir="${build.docs.api.dir}"/>

    <!-- Classpaths -->
    <path id="classpath.compilation">
      <pathelement path="${build.classes.dir}"/>
      <fileset dir="${lib.dir}">
        <include name="**/*jar"/>
      </fileset>
    </path>

  </target>
    
  <target name="war" depends="jar"
          description="==> Generates a WAR">
	<war destfile="${dist.dir}/nvcrs.war" webxml="${web-inf.dir}/web.xml" basedir="${build.dir}">
		<fileset dir="${build.lib.dir}"/>
		<fileset dir="${build.classes.dir}"/>
		<fileset dir="${web.dir}" excludes="WEB-INF/*"/>
	</war>
  </target>
   		
  <target name="jar" depends="clean,compile"
          description="==> Generates all jars in nvcrs">
   		
		<!-- Make the nvcrs.jar file -->
		<jar destfile="${build.lib.dir}/nvcrs.jar">
			<fileset dir="${build.classes.dir}" casesensitive="yes">
				<include name="**/*.class"/>
				<include name="**/*.properties"/>
      		</fileset>
			<fileset dir="${build.src.java.dir}" casesensitive="yes">
				<include name="**/*.java"/>
      		</fileset>
    	</jar> 

		<!-- Copy all support jars into the build dir -->
		<copy todir="${build.lib.dir}">
			<fileset dir="${lib.dir}" includes="*jar"/>
		</copy> 
  </target>

  <target name="deploy" depends="jar,deploy-prepare"
          description="==> deploys nvcrs module jars, html and other resources">
    
	<echo message="Deploying ${ant.project.name}"/>

	<!-- web -->
	<copy todir="${webapp.context}">
		<fileset dir="${web.dir}"/>
	</copy> 

	<!-- lib -->
	<copy todir="${webapp.lib.dir}">
		<fileset dir="${build.lib.dir}" includes="*jar" excludes="servlet.jar"/>
	</copy> 

  </target>
	
  <!-- ================================================================= -->
  <!-- Deploy only web resources                                         -->
  <!-- ================================================================= -->
  <target name="deploy-web" depends="deploy-prepare"
          description="==> deploys nvcrs module jars, html and other resources">
    
	<echo message="Deploying only web dir of ${ant.project.name}"/>

	<!-- web -->
	<copy todir="${webapp.context}">
		<fileset dir="${web.dir}"/>
	</copy> 

  </target>
	
  
  <!-- ================================================================= -->
  <!-- Deploy only Java resources                                        -->
  <!-- ================================================================= -->
  <target name="deploy-jars" depends="jar,deploy-prepare"
          description="==> deploys nvcrs module jars">
    
	<echo message="Distr all jars in ${ant.project.name}"/>

	<echo>deploying jars to ${webapp.lib.dir}</echo>
	<copy todir="${webapp.lib.dir}">
		<fileset dir="${build.lib.dir}" includes="*jar" excludes="servlet.jar"/>
	</copy> 
	
  </target>


  <target name="deploy-war" depends="war,deploy-prepare"
          description="==> deploys nvcrs module jars">
    
	<echo message="Distr war in ${ant.project.name}"/>

	<echo>deploying war to ${webapp.root}</echo>
	<copy todir="${webapp.root}">
		<fileset dir="${dist.dir}" includes="*war"/>
	</copy> 
	
  </target>


  <!-- ================================================================= -->
  <!-- Pave the way for a deployment                                     -->
  <!-- ================================================================= -->
  <target name="deploy-prepare" depends="prepare">
	<mkdir dir="${webapp.context}"/>
    <mkdir dir="${webapp.inf}"/>
    <mkdir dir="${webapp.lib.dir}"/>
  </target>

  <!-- ================================================================= -->
  <!-- Remove all Generated files                                        -->
  <!-- ================================================================= -->
  <target name="clean" depends="init" description="==> Remove all generated files">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>


  <target name="compile"
          depends="cleanprops, prepare"
          description="==> Compile the java code">

    <echo>${src.java.dir} to ${build.src.java.dir}</echo>
    <copy todir="${build.src.java.dir}">
      <fileset dir="${src.java.dir}">
        <include name="**/*java"/>
      </fileset>
    </copy>

    <!-- Copy property files -->
    <copy todir="${build.classes.dir}" filtering="true">
      <fileset dir="${src.java.dir}">
        <include name="**/*properties"/>
      </fileset>
    </copy>

    <javac srcdir="${build.src.java.dir}"
      includes="**/*.java"
      destdir="${build.classes.dir}"
      debug="on">			
      <classpath refid="classpath.compilation"/>
   </javac>
  
  </target>

  <!--
   * Some property files have values that are filtered by ant, delete these so 
   * ant can filter them again.
  -->
  <target name="cleanprops" depends="prepare" 
    description="==> Remove generated properties files">
    <echo>cleanprops: removing old generated properties files</echo>
    <delete>
      <fileset dir="${build.classes.dir}" includes="**/*.properties"/>
    </delete>
  </target>
 
  <!-- ================================================================= -->
  <!-- Generate Javadoc                                                  -->
  <!-- ================================================================= -->
  <target name="javadoc"
          depends="prepare"
          description="==> Generate projects javadoc">
 
    <javadoc 
      destdir="${build.docs.api.dir}"
      author="true"
      version="true"
      use="true"
      source="1.4"
      nodeprecated="false"
      
      windowtitle="${ant.project.name} API">

      <classpath refid="classpath.compilation"/>

      <packageset dir="src" defaultexcludes="yes">
        <include name="org/**" />
      </packageset>

      <packageset dir="${build.src.java.dir}" defaultexcludes="yes">
        <include name="org/vegbank/**" />
      </packageset>
      
      <doctitle><![CDATA[<h1>${ant.project.name}</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2001-2003 vegbank.org. All Rights Reserved.</i>]]></bottom>
      <tag name="TODO" scope="all" description="To do:" />
      <tag name="FIXME" scope="all" description="Fix me:" />
      <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
      <link href="http://java.sun.com/j2se/1.4.1/docs/api"/>
      <link href="http://jakarta.apache.org/struts/api"/>
    </javadoc>

  </target>


</project> 
