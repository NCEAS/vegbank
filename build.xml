<?xml version="1.0"?>
<!-- 
  * build.xml
  *
  * Global build script for vegclass. This simply allows running all the sub 
  * scripts from one place.
  *
  *     '$Author: farrell $'
  *     '$Date: 2003-10-17 20:28:54 $'
  *     '$Revision: 1.20 $'
--> 
<project name="vegclass" default="jar" basedir=".">

	
  <target name="prepare">
    <property environment="env" />
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.src.dir" value="${build.dir}/src"/>
    <property name="build.sql.src.dir" value="${build.src.dir}/sql"/>
    <property name="build.java.src.dir" value="${build.src.dir}/java"/>   
    <property name="build.javadatamodel.src.dir" value="${build.java.src.dir}/org/vegbank/common/model"/>  
    <property name="build.classes.dir" value="${build.dir}/classes"/>   
    <property name="build.reports.dir" value="${build.dir}/reports"/>
    <property name="build.reports.test.dir" value="${build.reports.dir}/testreports"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="docs.dir" value="${basedir}/docs"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="rmi.dist.dir" value="${dist.dir}/RMIServer"/>
    <property name="bin.dir" value="${basedir}/bin"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="xsl.src.dir" value="${src.dir}/xsl"/>
    <property name="sql.src.dir" value="${src.dir}/sql"/>
    <property name="ant.style.dir" location="${env.ANT_HOME}/etc" />
    <property name="web.docroot" location="${env.TOMCAT_HOME}/webapps" />

    <property name="vegbank.home.dir" location="/usr/vegbank"/>
    
    <property name="db.name" value="vegbank" />
    
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${build.sql.src.dir}"/>
    <mkdir dir="${build.reports.dir}"/>
    <mkdir dir="${build.reports.test.dir}"/>
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.java.src.dir}"/>  
    <mkdir dir="${build.javadatamodel.src.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${rmi.dist.dir}"/>

    <!-- Classpaths -->
    <path id="classpath.compilation">
      <pathelement path="veg_taxa/build/lib/planttaxonomy.jar"/>
      <pathelement path="veg_community/build/lib/vegcommunity.jar"/>
      <fileset dir="${lib.dir}">
        <include name="**/*jar"/>
      </fileset>
    </path>
  </target>
    
  <target name="jar" depends="compile"
          description="==> Generates all jars in vegclass module">
    
    <jar destfile="${lib.dir}/vegbank_datamodel.jar">
   		<fileset dir="${build.classes.dir}" casesensitive="yes">
        	<include name="org/vegbank/**/*.class"/>
      </fileset>
    </jar> 
    
    <ant dir="common" target="jar" inheritAll="false"/>
    <ant dir="veg_community" target="jar" inheritAll="false"/>
    <ant dir="veg_taxa" target="jar" inheritAll="false"/>
    <ant dir="veg_plot" target="jar" inheritAll="false"/>
    
  </target>

  <target name="run-tests" description="==> Run all the tests availible">
    <ant dir="veg_plot" target="run-tests" inheritAll="false"/> 
    <ant dir="common" target="test" inheritAll="false"/>
    <ant dir="veg_taxa" target="test" inheritAll="false"/>
  </target>
  
  <target name="deploy" depends="jar"
          description="==> deploys vegclass module jars, html and other resources">
    
    <ant dir="common" target="deploy" inheritAll="false"/>
    <ant dir="veg_community" target="deploy" inheritAll="false"/>
    <ant dir="veg_taxa" target="deploy" inheritAll="false"/>
    <ant dir="veg_plot" target="deploy" inheritAll="false"/>
  
  </target>

  <target name="clean" description="==> Remove all generated files">
    <ant dir="common" target="clean" inheritAll="false"/>
    <ant dir="veg_plot" target="clean" inheritAll="false"/>
    <ant dir="veg_community" target="clean" inheritAll="false"/>
    <ant dir="veg_taxa" target="clean" inheritAll="false"/>
  </target>

  <target name="dist-reports" 
          depends="prepare"
          description="==> Generate htmls from generated reports and distributes to web">

    <ant dir="common" target="dist-testreport" inheritAll="false"/>
    <!--<ant dir="veg_plot" target="run-tests" inheritAll="false"/>-->
    <ant dir="veg_community" target="clean" inheritAll="false"/>
    <ant dir="veg_taxa" target="test" inheritAll="false"/>
 
		<!-- Create a report from the junit output -->
		<junitreport todir="${build.reports.test.dir}">
	  		<fileset dir="${build.reports.test.dir}">
	  			<include name="TEST-*.xml"/>
			</fileset>
	  		<report format="frames"
				        todir="${web.docroot}/vegbank/dev/reports/junit"
	              styledir="${ant.style.dir}"/>
	  	</junitreport>
	
	</target>


  <target name="generate_java_datamodel"
          description="==> Generate the java datamodel"
          depends="prepare">
          
	    <xslt in="${docs.dir}/xml/db_model_vegbank.xml" 
	          style="${xsl.src.dir}/VegBankModel2Java.xsl"
	          out="${build.java.src.dir}/generate_java_datamodel-HAS_BEEN_RUN_FLAG">
	   		<param name="outdir"  
	   					expression="${build.javadatamodel.src.dir}/"/>
	    </xslt>
  </target>
  
  <target name="compile"
  			depends="generate_java_datamodel"
  			description="==> Compile the java code">
  		<javac srcdir="${build.java.src.dir}"
  					includes="**/*.java"
  					destdir="${build.classes.dir}">			
	      	<classpath refid="classpath.compilation"/>
   		 </javac>
  </target>
 
  <target name="install"
          depends="deploy"
          description="Install the application">
    <mkdir dir="${vegbank.home.dir}/lib"/>
    <mkdir dir="${vegbank.home.dir}/bin"/>
    <mkdir dir="${vegbank.home.dir}/originalDataStore"/>
    
    <copy todir="${vegbank.home.dir}/lib">
      <fileset dir="${lib.dir}">
         <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${docs.dir}/xml/dataxml">
	<include name="**/*.xsd"/>
      </fileset>
    </copy>
    <copy todir="${vegbank.home.dir}/lib">
      <fileset dir="veg_plot/build/lib">
         <include name="**/*.jar"/>
      </fileset>
    </copy>
    <copy todir="${vegbank.home.dir}/bin">
      <fileset dir="${bin.dir}">
         <include name="**/*"/>
      </fileset>
    </copy>

    <chmod perm="a+x">
      <fileset dir="${vegbank.home.dir}/bin">
         <include name="**/*sh"/>
      </fileset>
    </chmod>
  </target>
          
  <!-- ================================================================= -->
  <!-- Database related targets                                          -->
  <!-- ================================================================= -->

  <target name="db_generate_sql"
          description="==> Generate the sql build scripts"
          depends="prepare">
          
	    <xslt in="${docs.dir}/xml/db_model_vegbank.xml" 
	          out="${build.sql.src.dir}/vegbank.sql" 
	          style="${xsl.src.dir}/VegBankModel2SQL.xsl">
	    </xslt>
  </target>

  <target name="db_generate_archive_triggersql"
          description="==> Generate the archive trigger sql scripts"
          depends="prepare">
          
	    <xslt in="${docs.dir}/xml/db_model_vegbank.xml" 
	          out="${build.sql.src.dir}/trigger.sql" 
	          style="${xsl.src.dir}/VegbankModel2RevisionTriggersSQL.xsl">
	    </xslt>
  </target>


  <target name="db_rebuild_empty_vegbank"
          description="==> Rebuild the vegbank Database"
          depends="db_generate_sql">
    <!-- DROP and CREATE Database -->
    <exec executable="${bin.dir}/rebuilddb.sh">
      <arg value="${db.name}"/>
      <arg value="${build.sql.src.dir}/vegbank.sql"/>
      <arg value="veg_plot/sql/makePlotSummaryTables_postgres.sql"/>
    </exec>

    <antcall target="grant_db_privilages"/>
  </target>
  
  <target name="db_pre_load"
          description="==> Preload data into database"
          depends="prepare">
    <exec executable="${bin.dir}/run_sql.sh">
      <arg value="${db.name}"/>
      <arg value="${sql.src.dir}/insert_preload_ANSI.sql"/>
    </exec>
  </target>

  <target name="grant_db_privilages"
          description="==> Grant privilages to qa user"
          depends="prepare">
    <!-- Grant privilages -->
    <exec executable="bin/qa_user/grantQAPrivil.pl"/>
  </target>

</project>
