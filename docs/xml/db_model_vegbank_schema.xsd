<?xml version="1.0" encoding="UTF-8"?>
<!--W3C Schema generated by XML Spy v4.3 U (http://www.xmlspy.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="archive" type="xs:boolean"/>
  <!-- may have to do with revisions work Gabe started? -->
  <xs:element name="attDefinition" type="xs:string"/>
  <xs:element name="attForms">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="formPKTranslate"/>
        <xs:element ref="formAustere"/>
        <xs:element ref="formSummary"/>
        <xs:element ref="formDetail"/>
      </xs:sequence>
    </xs:complexType>
    <!-- this was an attempt at automating what field appear on different types of forms, and in what order, might be removed from this doc if we don't use them soon -->
  </xs:element>
  <xs:element name="attKey">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="FK"/>
        <xs:enumeration value="PK"/>
        <xs:enumeration value="n/a"/>
      </xs:restriction>
    </xs:simpleType>
    <!-- PK, FK or neither -->
  </xs:element>
  <xs:element name="attLabel" type="nonEmptyString"/>
  <!-- human readable label that we might think about using instead of field names for forms -->
  <xs:element name="attList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="attListItem" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
    <!-- list can be empty if there are no values -->
  </xs:element>
  <xs:element name="attListItem">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="attListValue"/>
        <xs:element ref="attListValueDesc" minOccurs="0"/>
        <xs:element ref="attListSortOrd" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
    <!-- a record in the list -->
  </xs:element>
  <xs:element name="attListSortOrd" type="xs:short"/>
  <xs:element name="attListType">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="closed"/>
        <xs:enumeration value="no"/>
        <xs:enumeration value="open"/>
      </xs:restriction>
    </xs:simpleType>
    <!-- this is the type of list that is attached to this field: no (no list), closed (constrained to this list), open (suggested values, but others accepted) -->
  </xs:element>
  <xs:element name="attListValue" type="xs:string"/>
  <!-- the value that is part of the list -->
  <xs:element name="attListValueDesc" type="xs:string"/>
  <!-- more description about a value.  Description may change or clarify value, but helpful if value is short and doesn't change -->
  <xs:element name="attModel">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="implementation"/>
        <xs:enumeration value="logical"/>
      </xs:restriction>
    </xs:simpleType>
    <!-- implementation fields are hidden from data dictionary -->
  </xs:element>
  <xs:element name="attName" type="validFieldTableName"/>
  <!-- the name of the field -->
  <xs:element name="attNotes" type="xs:string"/>
  <xs:element name="attNulls">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="no"/>
        <xs:enumeration value="yes"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="attReferences" >
     <xs:simpleType >
      <xs:union memberTypes="attRefNA attRefTblDotFld" />
    </xs:simpleType>
  </xs:element>
  <xs:simpleType name="attRefNA">
    <xs:restriction base="xs:string">
      <xs:enumeration value="n/a" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="attRefTblDotFld">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z][a-zA-Z_]*[a-zA-Z0-9].[a-zA-Z][a-zA-Z_]*[a-zA-Z0-9]" /> <!-- allows only letters and _ for tbl then . then field, letters and _ only -->
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="validFieldTableName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z][a-zA-Z_0-9]*[a-zA-Z0-9]" />  <!-- must start and end with letter, can have one _ in between -->
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nonEmptyString"> <!-- for fields which need to contain values, not empty -->
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>


  <!-- for foreign keys: references shows table.field that the FK points to -->
  <xs:element name="attRelType">
    <xs:complexType>
      <xs:attribute name="type" use="required">
        <xs:simpleType >
          <xs:restriction base="xs:string">
            <xs:enumeration value="root"/>
                        <xs:enumeration value="allfields"/>
                        <xs:enumeration value="alltables"/>
            <xs:enumeration value="normal"/>
            <xs:enumeration value="inverted"/>
            <xs:enumeration value="n/a"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <!-- type of relationship, either normal (entity appears inside FK, so party_ID is this party) or inverted, which means that the referenced element will contain all children referencing it, like observation as a child of plot in the xml schema, which inverts the observation.plot_ID field, which would, if normal, include the plot element inside observation.plot_ID element -->
      <!-- name of inverted relationship, if not the name of the table of the child element, ie subplot for plot.parent_plot. used because "plot" isn't going to describe what the children plots are: parents, children, neighbors -->
    </xs:complexType>
    <!-- used to create schema for xml data doc.  must be here, even if set to n/a for both atts. -->
  </xs:element>
  <xs:element name="attType">
    <xs:simpleType>
      <xs:union memberTypes="fieldTypes_1 fieldTypes_2"/>
      <!-- union of non-varchar types and varchars (with parens and number inside) -->
    </xs:simpleType>
  </xs:element>
  <xs:simpleType name="fieldTypes_1">
    <xs:restriction base="xs:string">
      <xs:enumeration value="oid"/>
      <xs:enumeration value="serial"/>
      <xs:enumeration value="Integer"/>
      <xs:enumeration value="Float"/>
      <xs:enumeration value="text"/>
      <xs:enumeration value="Date"/>
      <xs:enumeration value="Boolean"/>
    </xs:restriction>
    <!-- handle regularly enumerated types ie all but varchars -->
  </xs:simpleType>
  <xs:simpleType name="fieldTypes_2">
    <xs:restriction base="xs:string">
      <xs:pattern value="varchar \([0-9]+\)"/>
    </xs:restriction>
    <!-- handle varchar types -->
  </xs:simpleType>
  <xs:element name="attribute">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="attName"/>
        <xs:element ref="attLabel"/>
        <xs:element ref="attModel"/>
        <xs:element ref="attNulls"/>
        <xs:element ref="attType"/>
        <xs:element ref="javaType"/>
        <xs:element ref="attKey"/>
        <xs:element ref="attRelType"/>
        <xs:element ref="attReferences"/>
        <xs:element ref="attListType"/>
        <xs:element ref="attList"/>
        <xs:element ref="attNotes"/>
        <xs:element ref="attDefinition"/>
        <xs:element ref="archive" minOccurs="0"/>
        <xs:element ref="attForms" minOccurs="0"/>
        <xs:element ref="update"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="author" type="xs:string"/>
  <!-- document author  -->
  <xs:element name="contributor" type="xs:string"/>
  <xs:element name="dataModel">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="title"/>
        <xs:element ref="version"/>
        <xs:element ref="versionDesc"/>
        <xs:element ref="author"/>
        <xs:element ref="institution"/>
        <xs:element ref="contributor"/>
        <xs:element ref="description"/>
        <xs:element ref="date"/>
        <xs:element ref="entity" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="date" type="xs:string"/>
  <xs:element name="description" type="xs:string"/>
  <xs:element name="entity">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="entityName"/>
        <xs:element ref="entityLabel"/>
        <xs:element ref="entitySummary"/>
        <xs:element ref="entityDescription"/>
        <xs:element ref="module"/>
        <xs:element ref="archive" minOccurs="0"/>
        <xs:element ref="attribute" maxOccurs="unbounded"/>
        <!-- may have to do with gabe's work on archiving to the revisions table? -->
        <!-- fields on the table -->
      </xs:sequence>
    </xs:complexType>
    <!-- table -->
  </xs:element>
  <xs:element name="entityDescription" type="xs:string"/>
  <xs:element name="entityLabel" type="xs:string"/>
  <xs:element name="entityName" type="validFieldTableName"/>
  <xs:element name="entitySummary" type="xs:string"/>
  <xs:element name="formAustere" type="xs:decimal"/>
  <xs:element name="formDetail" type="xs:decimal"/>
  <xs:element name="formPKTranslate">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="suffix" type="xs:string"/>
          <xs:attribute name="prefix" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="formSummary" type="xs:decimal"/>
  <xs:element name="institution" type="xs:string"/>
  <xs:element name="javaType">
    <xs:complexType>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Object"/>
            <xs:enumeration value="String"/>
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="int"/>
            <xs:enumeration value="object"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="relation" use="required">
        <xs:simpleType >
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="one"/>
            <xs:enumeration value="many"/>
        </xs:restriction>
      </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="CoverMethod"/>
            <xs:enumeration value="Observation"/>
            <xs:enumeration value="Party"/>
            <xs:enumeration value="Plot"/>
            <xs:enumeration value="Project"/>
            <xs:enumeration value="Reference"/>
            <xs:enumeration value="SoilTaxon"/>
            <xs:enumeration value="StratumMethod"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="module">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="community"/>
        <xs:enumeration value="plant"/>
        <xs:enumeration value="plot"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="title" type="xs:string"/>
  <xs:element name="update">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="[0-9].[0-9].[0-9]"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="version" type="xs:string"/>
  <xs:element name="versionDesc" type="xs:string"/>
</xs:schema>
