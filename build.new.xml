<?xml version="1.0"?>
<!--
  *  '$RCSfile: build.new.xml,v $'
  *    Authors: @authors@
  *    Release: @release@
  *
  * '$Author: berkley $'
  * '$Date: 2006-05-15 19:58:39 $'
  * '$Revision: 1.6 $'
  *
  *	Authors: Chad Berkley
  *	Copyright: 2002 Regents of the University of California and the
  *							National Center for Ecological Analysis and Synthesis
  *
  *  See http://jakarta.apache.org for details on Ant
  *
-->
<project name="vegbank" default="war" basedir=".">
  <!-- 
   normal install:
   1) setup variables (init)
   2) copy src files to build (prepare)
   3) compile build/src to build/classes (compile)
   4) create any jars/wars (jar/war)
   5) copy build files to destination (install)
   6) copy any support files (lib, web, etc) to destination (install)
  -->
  <!--set up the correct variables-->
  <target name="init">
    <!--************ customize these properties *****************-->
    <!--general props-->
    <property name="name" value="vegbank"/>
    <property name="version" value="1.0.2"/>
    <property name="vegbankHome" value="/usr/local/vegbank"/>
    <property name="dataPath" value="${vegbankHome}/data"/>
    <property name="exportPath" value="${vegbankHome}/export"/>
    <property name="uploadPath" value="${vegbankHome}/upload"/>
    <property name="dataSchemaName" value="vegbank-data-ver1.0.2usage.xsd"/>
    <property name="modelSchemaName" value="db_model_vegbank_schema.xsd"/>
    <!--servlet/web container props-->
    <property name="tomcat" value="/usr/local/jakarta-tomcat"/>
    <property name="tomcatVersion" value="5"/>
    <property name="context" value="${name}"/>
    <property name="webapps" value="${tomcat}/webapps"/>
    <property name="webServerDir" value="${webapps}/${name}"/>
    <property name="host" value="localhost:8080"/>
    <!--database props-->
    <property name="databaseHost" value="localhost"/>
    <property name="databaseType" value="postgresql"/>
    <property name="databaseUser" value="berkley"/>
    <property name="databasePassword" value=""/>
    <property name="databasePort" value="1521"/>
    <property name="databaseDriverType" value="thin"/>
    <property name="databaseDriverClass" value="org.postresql.Driver"/>
    <property name="databaseName" value="vegbank"/>
    <property name="psqlPath" value="/usr/bin/psql"/>
    <!--mail server props-->
    <property name="mailServer" value="mail.msi.ucsb.edu"/>
    <property name="mailPort" value="25"/>
    <!--rmi server props-->
    <property name="rmiServer" value=""/>
    
    
    <!--** do not edit below here unless you really know what you're doing **-->
    <property name="databaseConnection" value="jdbc:${databaseType}://${databaseHost}/${databaeName}"/>
    <property name="buildDir" value="build"/>
    <property name="srcDir" value="src"/>
    <property name="classDir" value="classes"/>
    <property name="docsDir" value="docs"/>
    <property name="libDir" value="lib"/>
    <property name="distDir" value="dist"/>
    <property name="webDir" value="web"/>
  </target>
  
  <!--set the inline copy filters.  do not edit these directly. If you want
      to edit these, do it in the properties in init.                       -->
  <target name="setFilters" depends="init">
    <filter token="databaseType" value="${databaseType}"/>
    <filter token="databaseUser" value="${databaseUser}"/>
    <filter token="databaseUserPassword" value="${databasePassword}"/>
    <filter token="databasePort" value="${databasePort}"/>
    <filter token="hostname" value="${host}"/>
    <filter token="databaseDriverType" value="${databaseDriverType}"/>
    <filter token="databaseDriverClass" value="${databaseDriverClass}"/>
    <filter token="databaseConnectString" value="${databaseConnection}"/>
    <filter token="databaseName" value="${databaseName}"/>
    <filter token="psqlPath" value="${psqlPath}"/>
    <filter token="vegbankVersion" value="${version}"/>
    <filter token="vegbank.data.dir" value="${dataPath}/"/>
    <filter token="vegbank.export.dirname" value="${exportPath}/"/>
    <filter token="vegbank.home.dir" value="${vegbankHome}/"/>
    <filter token="vegbank.web.dir" value="${webServerDir}/"/>
    <filter token="schemaLocation" value="${webServerDir}/vegdocs/xml/"/>
    <filter token="vegbankSchemaName" value="${dataSchemaName}"/>
    <!-- End filters created from build.${context}.properties -->
    <!-- Copied these straight from the veg_plot build.xml, are they relevant ? -->
    <!-- Servlet specific -->
    <filter token="mailHost" value="${mailServer}"/>
    <filter token="mailPort" value="${mailPort}"/>
    <filter token="machineURL" value="${host}"/>
    <filter token="serverAddress" value="${host}"/>
    <filter token="systemEmail" value="${mailServer}"/> <!--not sure if this is the right value-->
    <filter token="genericForm" value="${context}/forms/generic_form.html"/>
    <filter token="genericTemplate" value="${context}/forms/tmp.html"/>
    <filter token="rmiserver" value="${rmiServer}"/>
    <filter token="uploadDir" value="${uploadPath}"/>
    <filter token="servlet_lib_dir" value="${webapps}/lib"/>
    <filter token="servlet_context" value="${context}/"/>
  </target>
  
  <!--copy files to the build directory and prepare for compilation-->
  <target name="prepare" depends="setFilters">
    <property name="buildSrcDir" value="${buildDir}/${srcDir}"/>
    <property name="buildClassDir" value="${buildDir}/${classDir}"/>
    <property name="buildLibDir" value="${buildDir}/lib"/>
    <property name="javaSrcDir" value="${srcDir}/java"/>
    <mkdir dir="${buildSrcDir}"/>
    <mkdir dir="${buildClassDir}"/>
    <mkdir dir="${buildLibDir}"/>
    <mkdir dir="${dataPath}"/>
    <mkdir dir="${exportPath}"/>
    <mkdir dir="${uploadPath}"/>
    
    <!--copy the java src to the build/src dir-->
    <copy todir="${buildSrcDir}">
      <fileset dir="${javaSrcDir}">
        <exclude name="**/CVS*"/>
        <exclude name="**/.#*"/>
      </fileset>
    </copy>
    
  </target>
  
  <!--set the classpath-->
  <target name="setclasspath">
    <path id="projectClassPath">
      <!-- Project jars -->
      <pathelement location="./"/>
      <pathelement location="${buildSrcDir}"/>
      <pathelement location="./"/>
      <fileset dir="lib/">
        <include name="**/*.jar"/>
      </fileset>
    </path>
    <property name="classpath" refid="projectClassPath"/>
  </target>
  
  <!--compile all files in build/src to build/classes-->
  <target name="compile" depends="setclasspath, prepare, generateBeans">
    <echo>classpath: ${classpath}</echo>
    <javac srcdir="${buildSrcDir}"
           destdir="${buildClassDir}"
           classpath="${classpath}"
           debug="on"
           source="1.4"/>
  </target>
  
  <!--jar all classes in build/classes to vegbank.jar-->
  <target name="jar" depends="compile">
    <jar destfile="${buildDir}/${name}.jar" update="true">
      <fileset dir="${buildClassDir}"/>
    </jar>
  </target>
  
  <!--get everything in the right place to build the war file-->
  <target name="warPrepare" depends="jar">
     <property name="buildWarDir" value="${buildDir}/war"/>
     <property name="srcWebInfDir" value="web/src/web/WEB-INF"/>
     <property name="warWebInfDir" value="${buildWarDir}/WEB-INF" />
     <property name="warLib" value="${buildWarDir}/lib" />
     <property name="warContext" value="${buildWarDir}/${context}" />
     <mkdir dir="${warLib}" />
     <mkdir dir="${warWebInfDir}" />
     <mkdir dir="${warContext}" />

     <!--copy the vegbank.jar file-->
     <copy file="${buildDir}/${name}.jar" todir="${warLib}" />
     
     <!--copy the other jar files-->
     <copy todir="${warLib}" filtering="no">
       <fileset dir="${libDir}">
          <include name="**/*.jar"/>
       </fileset>
     </copy>
     
     <!--copy the WEB-INF support files-->
     <copy todir="${warWebInfDir}" filtering="no">
       <fileset dir="${srcWebInfDir}">
          <include name="**/*.tld"/>
          <include name="**/*.xml"/>
          <exclude name="**/web.xml"/>
       </fileset>
     </copy>
     
     <!--copy the web files-->
     <copy todir="${warContext}" filtering="yes">
       <fileset dir="${webDir}">
         <include name="*.jsp"/>
         <include name="*.html"/>
       </fileset>
     </copy>
     <copy todir="${warContext}/admin" filtering="yes">
       <fileset dir="${webDir}/admin"/>
     </copy>
     <copy todir="${warContext}/ajax" filtering="yes">
       <fileset dir="${webDir}/ajax"/>
     </copy>
     <copy todir="${warContext}/email_templates" filtering="yes">
       <fileset dir="${webDir}/email_templates"/>
     </copy>
     <copy todir="${warContext}/forms" filtering="yes">
       <fileset dir="${webDir}/forms"/>
     </copy>
     <copy todir="${warContext}/general" filtering="yes">
       <fileset dir="${webDir}/general"/>
     </copy>
     <copy todir="${warContext}/images" filtering="no">
       <fileset dir="${webDir}/images"/>
     </copy>
     <copy todir="${warContext}/includes" filtering="yes">
       <fileset dir="${webDir}/includes"/>
     </copy>
     <copy todir="${warContext}/panel" filtering="yes">
       <fileset dir="${webDir}/panel"/>
     </copy>
     <copy todir="${warContext}/views" filtering="yes">
       <fileset dir="${webDir}/views"/>
     </copy>
     <copy todir="${warContext}" filtering="yes">
       <fileset dir="${buildSrcDir}">
         <include name="velocity.properties"/>
       </fileset>
     </copy>
     <copy todir="${warContext}/xsl" filtering="yes">
       <fileset dir="${srcDir}/xsl">
         <include name="**/*"/>
       </fileset>
     </copy>
     <copy todir="${warContext}/vegdocs/help" filtering="yes">
       <fileset dir="${webDir}/help">
         <include name="**/*"/>
       </fileset>
     </copy>
   </target>

  <!--war build directory to vegbank.war--> 
  <target name="war" depends="warPrepare">
     <mkdir dir="${distDir}" />
     <war destfile="${distDir}/${context}.war"
          webxml="${srcWebInfDir}/web.xml">
       <fileset dir="${warContext}"/>
       <lib dir="${warLib}"/>
       <webinf dir="${warWebInfDir}"/>
     </war>
   </target>
  
  <!--install war file to target webapps dir-->
  <target name="install" depends="war">
    <copy todir="${webapps}" filtering="no">
      <fileset dir="${distDir}">
        <include name="${context}.war"/>
      </fileset>
    </copy>
  </target>
  
  <!--clean the install back to a clean slate-->
  <target name="clean" depends="init">
    <delete dir="${buildDir}"/>
  </target>
  
  <!--
  **************************************************************************
  Targets below this line are helper targets that get depended on by
  other targets but should generally never be called by themselves.
  **************************************************************************
  -->
  
  <!-- ================================================================= -->
  <!-- Generate model beans, XML Digester rules, XML schema and JSP from -->
  <!-- the datamodel XML and generate utility                            -->
  <!-- javabeans                                                         -->
  <!-- ================================================================= -->
  <target name="generateBeans" depends="prepare">  
    <!-- DOES NOT PICKUP CORRECT XSLT PROCCESOR FOR ME -->
    <property name="xslSrcDir" value="${srcDir}/xsl"/>
    <property name="buildBeanSrcDir" value="${buildSrcDir}/org/vegbank/common/model"/>
    <property name="buildModelUtilitySrcDir" value="${buildBeanSrcDir}/utility"/>
    <property name="vegbankSchemaData" value="vegbank-data-ver1.0.2usage.xsd"/>
    <property name="modelGeneratedFlag" value="${buildSrcDir}/generate_java_datamodel-HAS_BEEN_RUN_FLAG"/>
    <path id="classpath.compilation">
      <pathelement path="${buildClassDir}"/>
      <pathelement path="${buildSrcDir}"/>
      <!-- Pick up non java resources -->
      <fileset dir="${libDir}">
        <include name="**/*jar"/>
      </fileset>
    </path>

    <echo>Generating the regular VBModelBeans ...  using ${xslSrcDir}/VegBankModel2Java.xsl building to ${buildBeanSrcDir}/</echo>
    <java classname="org.apache.xalan.xslt.Process" fork="true">
      <arg line="-IN ${docsDir}/xml/db_model_vegbank.xml -XSL ${xslSrcDir}/VegBankModel2Java.xsl -OUT ${modelGeneratedFlag} -PARAM outdir ${buildBeanSrcDir}/"/>
      <jvmarg value="-Xbootclasspath/p:lib/xalan.jar:lib/xercesImpl.jar:lib/xml-apis.jar"/>
    </java>
    <echo>Generate the Utility javabeans e.g. statelist from ${docsDir}/xml/utility into ... ${buildModelUtilitySrcDir}/ using ${xslSrcDir}/UtilityXMLToJavaBeans.xsl</echo>
    <java classname="org.apache.xalan.xslt.Process" fork="true">
      <arg line="-IN ${docsDir}/xml/utility/UtilityBeans.xml -XSL ${xslSrcDir}/UtilityXMLToJavaBeans.xsl -OUT ${modelGeneratedFlag} -PARAM outdir ${buildModelUtilitySrcDir}/"/>
      <jvmarg value="-Xbootclasspath/p:lib/xalan.jar:lib/xercesImpl.jar:lib/xml-apis.jar"/>
    </java>
    <echo>Generate the vegbank schema xsd file ... ${buildLibDir}/${vegbankSchemaData}</echo>
    <java classname="org.apache.xalan.xslt.Process" fork="true">
      <arg line="-IN ${docsDir}/xml/db_model_vegbank.xml -XSL ${docsDir}/xml/dbmodel-to-schema.xsl -OUT ${buildLibDir}/${vegbankSchemaData}"/>
      <jvmarg value="-Xbootclasspath/p:lib/xalan.jar:lib/xercesImpl.jar:lib/xml-apis.jar"/>
    </java>
  </target>
</project>
