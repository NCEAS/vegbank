Option Compare Database
Option Explicit

Private Function manuallyMatchPlantConcept() As Boolean
   'manually match this string to a concept
    Static strLastPlantAccCodeManualMatch As String
  If Not [chk_noMenus] Then
    'simply browse for it, though may take a while to bring up the form
browseAnyway:
    manuallyMatchPlantConcept = ChangePlantConc([plantName], pltxa_BrowseForPlantConcept(), True)
       GoTo exitthis
  Else
     'ask for accessionCode
    Dim strAccCode As String
    strAccCode = InputBox("Enter the Accession Code for the concept you would like to match to. " _
    & " Enter ""browse"" to search for an accession code.  The last accession code you entered is listed as a default." _
    & Chr(13) & "Tip: to browse for plants and not type information manually in this box anymore, uncheck the ""Let me type names..."" checkbox in the upper right of the form.", _
      "VegBranch Manual Matching- with accession code", strLastPlantAccCodeManualMatch)
      If strAccCode = "browse" Or strAccCode = """browse""" Then
        'browse for accessionCodes anyway
        GoTo browseAnyway
      End If
      If strAccCode = "" Then
        'cancelled:
        msgBox "cancelled."
        GoTo exitthis
      End If
      Dim lngPK As Long
      lngPK = getPKfromAccessionCode(strAccCode, "PlantConcept")
      Debug.Print "manually matching to AccCode:" & strAccCode & " concept:" & lngPK
      If lngPK > 0 Then
        'do the match!
        manuallyMatchPlantConcept = ChangePlantConc([plantName], lngPK)
      Else
        msgBox "The accession code you entered was not valid, or was not found in the VegBank Module, please check the code and try again.", , "VegBranch"
      End If
      strLastPlantAccCodeManualMatch = strAccCode
  End If
exitthis:
  
End Function

Private Sub Command2_Click()
'check current plant again
populate_Z_B_LkNms True, [plantName]
recalcCurrForm (True)

End Sub

Private Sub Command23_Click()
  Call manuallyMatchPlantConcept
End Sub

Private Sub Command24_Click()
  'this is new, add to species list
  If [PLANTCONCEPT_ID] <> -1 Then
    If AreYouSure("This will set the current plant (" & [plantName] & ") which IS matched to a VegBank plant, to a NEW plant, meaning it will be added through the Species List Loading table.  Continue?") Then
      Call ChangePlantConc([plantName], -1, False)
    Else
      GoTo exitthis
    End If
      
  End If
  
  'now add to species list if not there
  If [plantAsConc] <> 3 Then
       'add to species list
       DoCmd.RunSQL "insert into Z_USER_B_SpecList (plantCode,plantName) select " & SQLizeTxt([plantName]) & "," & SQLizeTxt([plantName])
       populate_Z_B_LkNms True, [plantName]
       [plantAsConc] = 3 'HARDCODE plantAsConc
       DoCmd.OpenForm "Z_USER_B_specList_new", , , "plantCode=" & SQLizeTxt([plantName])
       msgBox "This plant is in your species list to be added as a new plant.  This form is now open for you to see how the new plant will be added.", , "VegBranch"
  Else
     If msgBox("This plant is already in your species list to be added. Would you like to see this plant in your Species List?", vbYesNo, "VegBranch") = vbYes Then
       DoCmd.OpenForm "Z_USER_B_specList_new", , , "plantCode=" & SQLizeTxt([plantName])
     End If
  End If
  
exitthis:
Exit Sub
End Sub

Private Sub Command27_Click()
  'first update plants via metadata: which ones are really new
  Call trans_PlantPartyPersp
  Call PreviewPlants("concepts")
  
End Sub

Private Sub plantMatchWizard_Click()

  'get information about current line
  
   'get info about plant:
   Dim strPlantName As String, strLinkedThrough As String, lngPNID As Long, lngPCID As Long, _
   plAsConc As Long, strNote As String, strNameNote As String
   strPlantName = [plantName]
   strLinkedThrough = [linkedThrough]
   lngPNID = [PLANTNAME_ID]
   lngPCID = [PLANTCONCEPT_ID]
   plAsConc = [plantAsConc]
   strNote = [note]
   strNameNote = [plantNote]
   Dim blnLinkedThrough As Boolean
   If strLinkedThrough <> strPlantName Then blnLinkedThrough = True
   'first check to see if the name could be misspelled:
   Dim intResp As Integer, intStep As Integer
   intStep = 0
   
   'only do step one if name isn't found!
If lngPNID <= 0 Then
   intStep = intStep + 1
   intResp = MsgBox_cust("Welcome to the Plant Matching wizard.  Step " & intStep & " - misspelling?", _
   "look for different spelling,next option", "Your name: '" & strLinkedThrough & "' could be mispelled.  " _
   & " If you think this is a possibility, you can search the VegBank Module for other spellings.", "Plant Matching Wizard (" & intStep & ")")
   If intResp = 0 Then
     'cancelled
     GoTo cancelPlantMatchWizard
   End If
   'ACTION 1
   If intResp = 1 Then 'find new plant name
     If changeFormPlantName() = True Then
       'user has changed the name
       msgBox "Plant Matching Wizard has finished.  You successfully chose a new plant name.  If this name doesn't match a concept, you can start the wizard again."
       Exit Sub
     End If
   End If
End If
   
If lngPCID <= 0 Then
   'step 2 of wizard: group, if concept not found
   intStep = intStep + 1
   intResp = MsgBox_cust("Plant Matching wizard.  Step " & intStep & " - multiple plant concepts?", _
   "this is 2 to 4 plants,next option", "Your name: '" & strLinkedThrough & "' could be more than one plant concept.  " _
   , "Plant Matching Wizard (" & intStep & ")")
   If intResp = 0 Then
     'cancelled
     GoTo cancelPlantMatchWizard
   End If
   'ACTION 2
   If intResp = 1 Then 'create taxonAlt Syns
     'add it to spp list if not there
     Dim strSQLplantNm As String
     strSQLplantNm = SQLizeTxt(strPlantName)
     If Not IsPlantInSppList(strPlantName) Then
       'add to sppList
       DoCmd.RunSQL "INSERT INTO Z_USER_B_specList (plantCode, plantName, originalName, groupType) SELECT " _
       & strSQLplantNm & "," & strSQLplantNm & "," & strSQLplantNm & ",'union'"
     End If
     msgBox "You can create an irregular plant group from this form by entering a 'Plant Group' value and 2-4 alternate Taxa"
     'get user to plant that they want group for
     DoCmd.OpenForm "Z_USER_B_specList", , , "plantCode=" & strSQLplantNm, , acDialog
     'update this name
     populate_Z_B_LkNms True, strPlantName
     msgBox "Plant Matching Wizard has finished."
     Exit Sub
     
   End If
   
End If

'still here, huh?  Well, maybe get a manual match

 'step 3 of wizard: manual match
   intStep = intStep + 1
   intResp = MsgBox_cust("Plant Matching wizard.  Step " & intStep & " - manually find a plant concept?", _
    "manually match plant,next option", "Use this step to manually match the name: '" & strLinkedThrough & "' to a plant concept in the VegBank Module   " _
   , "Plant Matching Wizard (" & intStep & ")")
   If intResp = 0 Then
     'cancelled
     GoTo cancelPlantMatchWizard
   End If
   'ACTION 3
   If intResp = 1 Then 'find new plant concept
     If manuallyMatchPlantConcept() = True Then
       'user has changed the name
       msgBox "Plant Matching Wizard has finished.  You successfully manually matched to a plant concept."
       Exit Sub
     End If
   End If
   
 'step 4: if matched, suggest that it is new
If lngPCID > 0 Then
 intStep = intStep + 1
   intResp = MsgBox_cust("Plant Matching wizard.  Step " & intStep & " - unmatch plant concept?", _
    "unmatch this plant,next option", "If the name: '" & strLinkedThrough & "' matches a plant concept, but it is actually a plant concept new to VegBank, you can prevent VegBranch from matching this name by pressing the button above.  You can reverse this by manually matching the plant name.   " _
   , "Plant Matching Wizard (" & intStep & ")")
   If intResp = 0 Then
     'cancelled
     GoTo cancelPlantMatchWizard
   End If
   'ACTION 4
   If intResp = 1 Then
     Command24_Click
       If Not IsPlantInSppList(strPlantName) Then
         'add it
         DoCmd.RunSQL "INSERT INTO Z_USER_B_SpecList (plantCode, plantName) SELECT " & SQLizeTxt(strPlantName) & "," & SQLizeTxt(strPlantName)
         [plantAsConc] = 3
         Me.Refresh
       End If
       
      DoCmd.OpenForm "Z_USER_B_specList_new", , , "plantCode=" & SQLizeTxt(strPlantName)
     msgBox "Plant Matching Wizard has finished.  You successfully unmatched your plant concept.  Please fill in the details (like reference) of the new plant concept in the next form."
     Exit Sub
   End If
 
 
End If
   
exitthis:
  Exit Sub
cancelPlantMatchWizard:
  msgBox "Plant Matching Wizard cancelled."
  GoTo exitthis
End Sub

Private Sub findPlName_Click()
 Call changeFormPlantName
End Sub

Private Function changeFormPlantName() As Boolean
  If Not [chk_noMenus] Then
    'simple change of name, get big long menu and select
     changeFormPlantName = ChangePlantName([linkedThrough], pltxa_BrowseForPlantName())
  Else
    'prompt user for string name
    Dim strName As String
    strName = InputBox("What name would you like to use instead of the one now listed:?" _
      & Chr(13) & "  [TIP#1: Copying the name before opening this and pasting is helpful. TIP#2: to browse for plants and not type information manually in this box anymore, uncheck the 'Let me type names...' checkbox in the upper right of the form.]" _
          , "VegBranch", Nz([linkedThrough]))
         
    If strName = "" Then
      'cancelled
      changeFormPlantName = False
    Else
      'replace one with another
      changeFormPlantName = ChangePlantName([linkedThrough], -1, strName)
    End If
  End If
End Function
