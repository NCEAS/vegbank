<?xml version="1.0"?>
<!-- 
  * build.xml
  *
  * Global build script for veg_plot. This simply allows running all the sub 
  * scripts from one place 
  *
  *     '$Author: farrell $'
  *     '$Date: 2003-01-08 02:05:57 $'
  *     '$Revision: 1.8 $'
--> 
<project name="veg_plot" default="compile" basedir=".">

	<property name="servlet_lib" 
            value="/usr/local/devtools/jakarta-tomcat/webapps/framework/WEB-INF/lib/" />
  <property name="target" value="${target}" />
      
	
  <target name="init" description="Initialize global variables">
    <property environment="env" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="build.test.dir" value="${build.dir}/test"/>
    <property name="build.test.integration.dir"
      value="${build.test.dir}/integration"/>
    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="reports.dir" value="${build.dir}/reports"/>
    <property name="reports.test.dir" value="${reports.dir}/testreports"/>
    <property name="src.dir" value="${basedir}/src" />
    <property name="dist.dir" value="${basedir}/dist" />
    <property name="test.dir" value="${basedir}/test" />
    <property name="test.unit.src.dir" value="${test.dir}/Unit"/>
    <property name="test.integration.dir" value="${test.dir}/Integration"/>
    <property name="ant.style.dir" value="${env.ANT_HOME}/etc" /> 
    <property name="web.docroot" value="${env.TOMCAT_HOME}/webapps" /> 
    <property name="web.servlet.lib.dir"
      value="${web.docroot}/framework/WEB-INF/lib" /> 
    <property name="xmlp" value="${lib.dir}/xalan_1_2_2.jar:${lib.dir}/xerces_1_3_1.jar:${lib.dir}/xml-apis.jar" />
    <property name="jdbc" value="${lib.dir}/jdbc7.0-1.2.jar" />
    <property name="xmlresource" value="${build.lib.dir}/xmlresource.jar" />
    <property name="datatranslator" value="${build.lib.dir}/datatranslator.jar" />
    <property name="servletutil" value="${build.lib.dir}/utilities.jar" />
    <property name="planttaxonomy" value="${build.lib.dir}/planttaxonomy.jar" />
    <property name="databaseAccess" value="${build.lib.dir}/database_access.jar" />
    <property name="cpath" 
      value="${planttaxonomy}:${databaseAccess}:${servletutil}:${datatranslator}:${xmlresource}:${xmlp}:${jdbc}:${build.class.dir}"/>


    <filter token="reports.test.dir" value="${reports.test.dir}"/>
    <filter token="outputXML" value="${web.servlet.lib.dir}/atomicResult"/>
    <filter token="java1.4.home.dir" value="/usr/java/j2sdk1.4.1"/>   
    <filter token="build.test.integration.dir"
      value="${build.test.integration.dir}"/>
    <filter token="" value=""/>
    
  </target>
  
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.lib.dir}"/>
  </target>
  
  <target name="compile" depends="prepare"
          description="Compiles all code in veg_plot module">
		<echo message="Compiling all of ${ant.project.name}"/>
    <ant dir="exp/client_installer" target="compile"/>
		<ant dir="exp/database_access" target="compile"/>
		<ant dir="exp/data-translators" target="compile"/>
		<ant dir="exp/rmidatasource" target="compile"/> 
		<ant dir="exp/services" target="compile"/>
		<ant dir="exp/servlet" target="compile"/>
		<ant dir="exp/vegclient" target="compile"/>
		<ant dir="exp/xml-resource" target="compile"/>
		<ant dir="exp/xml_to_sql" target="compile"/>
    <ant antfile="./build-plotvalidation.xml" target="compile"/>
	</target>
	
	<target name="jar" depends="compile"
          description="Generates all jars in veg_plot module">
		<echo message="Creating all of jars in ${ant.project.name}"/>
		<ant dir="exp/database_access" target="jar"/>
		<ant dir="exp/data-translators" target="jar"/>
		<ant dir="exp/rmidatasource" target="jar"/> 
		<ant dir="exp/services" target="jar"/>
		<ant dir="exp/servlet" target="jar"/>
		<!--<ant dir="exp/vegbank_web" target="jar"/>-->
		<ant dir="exp/vegclient" target="jar"/>
		<ant dir="exp/xml-resource" target="jar"/>
		<ant dir="exp/xml_to_sql" target="jar"/>
	</target>
	
	<target name="deploy" depends="jar"
          description="Deploys jars in veg_plot module to servlet container">
		<echo message="Distr all of jars in ${ant.project.name}"/>
		<ant dir="exp/database_access" target="dist-web"/> 
		<ant dir="exp/data-translators" target="dist"/>
		<ant dir="exp/rmidatasource" target="dist"/> 
		<!-- <ant dir="exp/services" target="jar"/> No dist target -->
		<ant dir="exp/servlet" target="dist"/>
		<ant dir="exp/vegbank_web" target="dist"/>
		<!-- FIXME <ant dir="exp/vegclient" target="dist"/>  target fails to build -->
		<!-- <ant dir="exp/xml-resource" target="dist"/> No dist target -->
		<!-- <ant dir="exp/xml_to_sql" target="jar"/> No dist target -->
		<antcall target="deploy-resources"/>
	</target>

	<target name="deploy-resources" description="Deploy resources to servlet container">
		<!-- Copy xml resources to servlet container -->
		<copy todir="${servlet_lib}">
			<fileset dir="xml" includes="querySpec.xsl, plotQuery.dtd,
      ascii-treeview.xsl, showCommunitySummary.xsl"/>
		</copy>
    
		<copy file="src/utilities/coord_transform.sh" todir="${servlet_lib}"/>
		<copy file="../veg_community/sql/update_community_summary.sql" todir="${servlet_lib}"/>
	</target>

	<target name="clean" description="Remove all generated files">
    <delete dir="${build.dir}"/>
  
		<ant dir="exp/client_installer" target="clean"/>
		<ant dir="exp/database_access" target="clean"/>
		<ant dir="exp/data-translators" target="clean"/>
		<ant dir="exp/rmidatasource" target="clean"/> 
		<ant dir="exp/services" target="clean"/>
		<ant dir="exp/servlet" target="clean"/>
		<ant dir="exp/vegclient" target="clean"/>
		<ant dir="exp/xml-resource" target="clean"/>
		<ant dir="exp/xml_to_sql" target="clean"/>
	</target>
  
	<!-- Want to pass command line variables in ant but no working yet	
	<target name="database_access">
		<echo message="Going to call ${target} "/>
		<ant dir="exp/database_access" target="${target}"/>		
	</target>
	-->
  
  <target name="test" depends="prepare" 
          description="Run all the junit tests">
    
    <property name="build.test.classes.dir" value="${build.test.dir}/classes"/>
    <mkdir dir="${build.test.dir}"/>
    <mkdir dir="${reports.test.dir}"/>
    <mkdir dir="${build.test.classes.dir}"/>
    <mkdir dir="${build.test.dir}/src"/>
    <mkdir dir="${build.test.dir}/testdata"/>

    <!-- Copy testdata into build tree -->
    <copy todir="${build.test.dir}/testdata">
      <fileset dir="${test.dir}/TestData">
        <include name="*xml"/>
      </fileset>
    </copy>
    
    <!-- copy and compile the tests into a jar file -->
    <copy todir="${build.test.dir}/src">
      <fileset dir="${test.unit.src.dir}">
        <include name="**/*java"/>
      </fileset>
    </copy>
    
    <javac srcdir="${test.unit.src.dir}"
           destdir="${build.test.classes.dir}"
           classpath="${cpath}:${lib}/database_access.jar"
           includes="**/*.java" />

    <jar jarfile="${build.lib.dir}/${ant.project.name}-junittests.jar"
         basedir="${build.test.classes.dir}"
         includes="**/*.class" />

    <!-- use the ant "junit" task to run JUnit tests. -->
    <junit printsummary="yes" haltonfailure="no" fork="no"
           haltonerror="no">
      <classpath>
        <pathelement path="${cpath}"/>
        <fileset dir="${build.lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
      
      <formatter type="xml" />

      <batchtest fork="yes" todir="${reports.test.dir}">
        <fileset dir="${build.test.classes.dir}">
          <include name="**/*.class" />
        </fileset>
      </batchtest>
    </junit>

  </target>

  <target name="dist-testreport" depends="test" 
          description="Generate a html and distribute a report from tests output">

    <!-- Create a report from the junit output -->
    <junitreport todir="${reports.test.dir}">
      <fileset dir="${reports.test.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="noframes" todir="${web.docroot}/vegbank/" styledir="${ant.style.dir}"/> 
    </junitreport>

  </target>
 
  <target name="test-integration" depends="prepare"
          description="Run Integration Tests">
    
    <property name="build.test.integration.dir" value="${build.test.dir}/integration"/>
    <mkdir dir="${build.test.integration.dir}"/>

    <copy todir="${build.test.integration.dir}" filtering="yes">
      <fileset dir="${test.integration.dir}">
        <include name="*sh"/>
        <include name="*xsl"/>
        <include name="*sql"/>
      </fileset>
    </copy>
    
    <exec executable="${build.test.integration.dir}/LoadPlotTest.sh">
      <env key="CLASSPATH" value="${cpath}"/>
    </exec>
  
  </target>
</project>

