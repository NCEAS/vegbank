<?xml version="1.0"?>
<!-- 
  * build.xml
  *
  *	Authors: John Harris
  *	Copyright: 	2000 Regents of the University of California and the
  *							National Center for Ecological Analysis and Synthesis
  *  Build file for the Ant cross-platform build system for metacat
  *  See http://jakarta.apache.org for details on Ant  
  *  
  * This build file will build the plot database access 
  * module and insert into a working version of the plots 
  * database an xml plot record, then query that database
  * for all plots containing a taxon containing the string
  * "Carya".
  * usage: ant [compile|jar|install|jdoc]
--> 
<project name="database_access" default="dist" basedir=".">
	<target name="init">
	<tstamp/>
	
	<!-- 
		* Below are the database connection settings
		* that should be customized by the user before 
		* the ant build process is run
		*
		* the default settings are for:
	-->

	<filter token="databaseType" value="postgresql" />
	<filter token="user" value="datauser" />
	<filter token="password" value="pass" />
	<filter token="port" value="1521" />
	<filter token="driverType" value="thin" />
	<filter token="driverClass" value="org.postgresql.Driver" />
	<filter token="connectString" value="jdbc:postgresql://beta.nceas.ucsb.edu/plots_dev" />
	<filter token="databaseName" value="nvc" />
	<filter token="insert.minConnections" value="1" />
	<filter token="insert.maxConnections" value="3" />
	<filter token="query.minConnections" value="1" />
	<filter token="query.maxConnections" value="3" />
	<filter token="maxConnectionUses" value="100" />
	<filter token="resetTime" value="0.01" />
	<filter token="logFile" value="connectionPool.log" />
	
	
	<property name="current" value="./" />
	<property name="build" value="./build" />
	<property name="src" value="src" />
	<property name="dist" value="dist" />
	<property name="release" value="alpha-20011008"/>
	<property name="lib" value="./lib"/>
	<filter token="dist" value="dist"/>
	<filter token="version" value="development"/>
	<property name="xmlp" value="${lib}/xalan_1_2_2.jar:${lib}/xerces_1_3_1.jar:" />
	<property name="jdbc" value="" />
	<property name="xmlresource" value="./lib/xmlresource.jar" />
	<property name="datatranslator" value="./lib/datatranslator.jar" />
	<property name="servletutil" value="./lib/utilities.jar" />
	<property name="planttaxonomy" value="./lib/planttaxonomy.jar" />
	
	<property name="cpath" value="${planttaxonomy}:${servletutil}:${datatranslator}:${xmlresource}:${xmlp}:${jdbc}:${build}:./"/>

	<!-- SERVLET LOCATION -->
	<property name="servlet_lib" value="/usr/local/devtools/jakarta-tomcat/webapps/framework/WEB-INF/lib//" />
	<!--
	<property name="servlet_lib" value="/usr/local/devtools/jakarta-tomcat_dev/webapps/framework/WEB-INF/lib//" />
	-->
	
</target>

<target name="prepare" depends="init">
	<mkdir dir="${build}" />
	
	<copydir src="${src}" 
		dest="${build}" 
		filtering="yes"
		includes="
		AsciiDataLoader.java 
		TaxonomyQueryStore.java 
		UserDatabaseAccess.java 
		LocalDbConnectionBroker.java 
		CommunityQueryStore.java  
		xmlWriter.java 
		queryStore.java 
		PlotDBWriter.java 
		dbConnect.java 
		plotWriter.java 
		PlotDBUpdateWriter.java 
		dbAccess.java 
		utility.java 
		transformXML.java 
		sqlMapper.java 
		issueStatement.java 
		DbConnectionBroker.java
		PlotDataMapper.java
		PlotXmlWriter.java
		PlotElements.java
		
		SqlFile.java
		DBinsertPlotSource.java
		DB.java"
		excludes="**/CVS* "
	/>

	<copyfile src="${lib}/database.properties" 
		filtering="yes" 
		dest="${build}/database.properties" 
	/>

</target>	


<!-- COMPILE -->
<target name="compile" depends="prepare">
	<javac srcdir="${build}" 
		classpath="${cpath}"
		includes="**.java  " 
		destdir="${build}"
	/>
</target>	


	<!-- DIST -->
	<target name="dist" depends="compile">
		<jar jarfile ="${lib}/database_access.jar"
			basedir="${build}"
			includes="${build}/ ** "
		/>
	</target>
	
	<!-- 
		DISTWEB - this puts the jar file in the correct location for the 
		servlets to use
	-->
	<target name="dist-web" depends="dist">
		 <echo>
			copying jar to web server: ${servlet_lib}
		</echo>


		<copyfile src="${lib}/database_access.jar" 
			filtering="no" 
			dest="${servlet_lib}/database_access.jar" 
		/>
	
	</target>
	
</project>
