<?xml version="1.0"?>
<!-- 
  *
  *  '$RCSfile: build.xml,v $'
  *    Authors: @authors@
  *    Release: @release@
  *
  *   '$Author: farrell $'
  *   '$Date: 2003-02-18 22:48:55 $'
  *   '$Revision: 1.15 $'
  *
  *  Authors: John Harris
  *  Copyright: 2000 Regents of the University of California and the
  *           National Center for Ecological Analysis and Synthesis
  *  Build file for the Ant cross-platform build system for metacat
  *  See http://jakarta.apache.org for details on Ant  
  *  
  * This build file will build the plot database access 
  * module and insert into a working version of the plots 
  * database an xml plot record, then query that database
  * for all plots containing a taxon containing the string
  * "Carya".
  * usage: ant [compile|jar|install|jdoc]
-->
 
<project name="servlet" default="compile" basedir=".">

 	<target name="init">
    	<tstamp/>
    
        <echo message="############ ${ant.project.name} ##############"/> 
        <property name="build" value="${basedir}/build" />
        <property name="lib.dir" value="${basedir}/lib" />
        <property name="build.lib.dir" value="${build}/lib" />
    
        <!--NOTICE THE SETTINGS FOR THE PRODUCTION VS THE DEVELOPMENT SERVLET LOCATIONS -->
        <!-- PRODUCTION	 -->
        <property name="servlet_location" value="/usr/local/devtools/jakarta-tomcat/webapps/framework/WEB-INF/lib" />
        <property name="servlet_WEB_INF" value="/usr/local/devtools/jakarta-tomcat/webapps/framework/WEB-INF/" />
        <property name="appserver_bin" value="/usr/local/devtools/jakarta-tomcat/bin" />
        <property name="servlet.webapp.dir" value="/usr/local/devtools/jakarta-tomcat/webapps" />
    
        <!-- DEVELOPMENT -->
        <!--
    	  <property name="servlet_location" value="/usr/local/devtools/jakarta-tomcat_dev/webapps/framework/WEB-INF/lib" />
    	  <property name="appserver_bin" value="/usr/local/devtools/jakarta-tomcat_dev/bin" />
        -->

	  <property name="release" value="development"/>
	  <property name="frameworksrc" value="${basedir}/frameworkservlet/src"/>
	  <property name="authenticationsrc" value="${basedir}/authentication"/>
	  <property name="utilsrc" value="${basedir}/util"/>
	  <property name="datafileexchg_src" value="${basedir}/datafile-exchange"/>
	  <property name="usermanagementsrc" value="${basedir}/usermanagement-servlet"/>
	  <property name="stylesheet_src" value="${basedir}/stylesheet_servlet/src"/>
	
	  <property name="multipart_src" value="${basedir}/multipart"/>
	  <property name="ant" value="ant.jar"/>

	
	  <!--
	  <property name="multipart" value="${lib.dir}/multipart.jar"/>
    <property name="xmlresource" value="lib/xmlresource.jar" />
    <property name="servlet_api" value="${lib.dir}/servlet.jar" />
	  <property name="dbaccess" value="lib/database_access.jar" />
	  <property name="data-source" value="lib/datatranslator.jar" />

    <property name="cpath" value="${multipart}:${ant}:${build}:${data-source}:${dbaccess}:${build}:${xmlresource}:${servlet_api}:${jdbc}:./"/>
	-->
 
    <property name="vegbank.home.dir" value="/usr/vegbank"/>
    <property name="originalDataStore" value="${vegbank.home.dir}/originalDataStore"/>
    <property name="serverUrl" value="tekka.nceas.ucsb.edu" />
    <property name="rmiserver"  value="192.168.0.2"/>  
    
    <!-- Filters -->
    <filter token="serverUrl" value="${serverUrl}" />
    <filter token="servlet-path" value="${servlet-path}" />
    <filter token="mailHost" value="nceas.ucsb.edu"/>
    <filter token="systemEmail" value="dba@vegbank.org"/>
    <filter token="genericForm" value="${servlet.webapp.dir}/forms/generic_form.html"/>
    <filter token="genericTemplate" value="${servlet.webapp.dir}/forms/tmp.html"/>
    <filter token="rmiserver"  value="${rmiserver}"/>  
    <filter token="uploadDir" value="${servlet_location}"/>
    <filter token="originalDataStore" value="${originalDataStore}"/>
    <!-- End Filters -->
        
  </target>




<!-- PREPARE TARGET -->
<target name="prepare" depends="init">
	<mkdir dir="${build}" />
  <mkdir dir="${build.lib.dir}"/>
</target>


<!-- COPY TARGET -->
<target name="copy" depends="prepare">

<echo>${rmiserver} and ${serverUrl} </echo>

  <copy todir="${build}"
        filtering="true">
	  <!-- the utilities -->
    <fileset dir="${utilsrc}" casesensitive="yes">
      <include name="**/*java"/>
    </fileset>
    <fileset dir="${stylesheet_src}" casesensitive="yes">
      <include name="**/*java"/>
    </fileset>
    <fileset dir="${datafileexchg_src}" casesensitive="yes">
      <include name="**/*java"/>
    </fileset>    
	  <!-- the authentication -->
    <fileset dir="${authenticationsrc}" casesensitive="yes">
      <include name="**/*java"/>
    </fileset>
    <fileset dir="${frameworksrc}" casesensitive="yes">
      <include name="**/*java"/>
    </fileset>
	  <!-- UserManagement Servlet-->
    <fileset dir="${usermanagementsrc}" casesensitive="yes">
      <include name="**/*java"/>
    </fileset>
	  <!-- The Property files -->
    <fileset dir="${lib.dir}" casesensitive="yes">
      <include name="**/*properties"/>
    </fileset>
  </copy>
 
  <copy file="${lib.dir}/frameworkservlet-config.xml" todir="${build}"/>
</target>	




<!-- COMPILE TARGET -->	
<target name="compile" depends="copy" description="==> the main compile target that compiles all the servlet code">

	<echo message="compiling vegbank servlet classes" />
	<javac srcdir="${build}" 
    debug="on"
		includes="**.java  " 
		destdir="${build}"
  >
    <classpath>
      <pathelement location="${build}"/>
      <path refid="classpath.compilation"/>
    </classpath>
  </javac>

</target>	


<!-- JAR TARGET -->
<target name="jar" depends="compile" description="-- main jar target put the servlets into jar files.">
	
	<jar jarfile ="${build.lib.dir}/utilities.jar"
		basedir="${build}"
		includes="servlet/util/**"
	/>
  <!-- This jar is needed elsewhere -->
  <copy todir="../../build/lib/" file="${build.lib.dir}/utilities.jar"/>
  

	<jar jarfile ="${build.lib.dir}/stylesheet-generator.jar"
		basedir="${build}"
		includes="servlet/stylesheet/** "
	/>
	
	
	<jar jarfile ="${build.lib.dir}/frameworkservletmodule.jar"
		basedir="${build}"
		includes="servlet/framework/**  servlet/plugin/**"
		excludes="${build}/servlet/authentication"
	/>

	<jar jarfile ="${build.lib.dir}/authservletmodule.jar"
		basedir="${build}"
		includes="servlet/authentication/** authentication.properties  "
		excludes="${build}/servlet/authentication"
	/>
	
	<jar jarfile ="${build.lib.dir}/datafile-exchange.jar"
		basedir="${build}"
		includes="servlet/datafile_exchange/** dataexchange.properties"
		excludes="${build}/servlet/authentication"
	/>
	
	<jar jarfile ="${build.lib.dir}/usermanagement.jar"
		basedir="${build}"
		includes="servlet/usermanagement/** "
		excludes="${build}/servlet/authentication"
	/>
	
	<echo message="Generating jar for vegbank-request" />
	<ant dir="vegbank-request" inheritRefs="true" inheritAll="true" target="jar"/>	
	
</target>



<!-- DIST TARGET -->
<target name="dist" depends="jar" description="--copies the jar files to the servlet container">

	<copy todir="${servlet_location}" filtering="no" >
		<fileset dir="${build.lib.dir}" >
      <include name="*jar"/>
  	</fileset>
	</copy>

	<copy todir="${servlet_location}" filtering="no" >
		<fileset dir="${lib.dir}" >
  	  <include name="utilities.jar"/>
      <include name="planttaxonomy.jar"/>      		
      <include name="vegcommunity.jar"/>
    </fileset>
	</copy>

	<copy todir="${servlet_location}" filtering="no" >
    <fileset dir="${lib.dir}" >
  	  <include name="ant.jar"/>
    </fileset>
	</copy>

	<copy todir="${servlet_WEB_INF}" filtering="no" >
		<fileset dir="${lib.dir}" >
  	  <include name="web.xml"/>
  	</fileset>
	</copy>
	
	<echo message="Distributing vegbank-request" />
	<ant dir="vegbank-request" target="dist-web"/>	
	
</target>

<!--  JDOC  -->
<target name="jdoc">
 <javadoc 
   sourcefiles="usermanagement-servlet/UserManagementServlet.java,util/GetURL.java,util/DataExchangeClient.java,util/ServletUtility.java,authentication/UserDatabaseAccess.java,authentication/AuthenticationServlet.java"
	 sourcepath="src"        
	 destdir="doc/api"
	 author="true"
	 version="true"
	 private="true"
	 use="true"
	 windowtitle="VEGBANK FRAMEWORK SERVLET">
</javadoc>
</target>

<!-- CLEAN -->
<target name="clean" description="Remove generated files" depends="init" >
	<delete dir="${build}" />
	<ant dir="vegbank-request" target="clean"/>	
</target>
								 

</project>
