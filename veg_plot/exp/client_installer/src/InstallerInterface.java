/*
 * InstallerInterface.java
 *
 * Created on September 24, 2001, 2:38 PM
 */
package vegclient.installer;

/**
 *
 * @author  administrator
 * @version 
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.util.*;
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.util.*;
import java.io.*;

import vegclient.installer.*;

public class InstallerInterface extends javax.swing.JFrame {

    Installer installer = new Installer();
    
    /** Creates new form InstallerInterface */
    public InstallerInterface() {
        initComponents ();
        pack ();
        setSize(400, 400);
        setTitle("ESA Vegetation Database Installer - build: @release@");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
                  mainPane = new javax.swing.JPanel();
                  installFromLocationPane = new javax.swing.JPanel();
                  installFromServerPane = new javax.swing.JPanel();
                  remoteInstallOptionsPane = new javax.swing.JPanel();
                  jPanel3 = new javax.swing.JPanel();
                  installFromInternetCheckBox = new javax.swing.JCheckBox();
                  jPanel4 = new javax.swing.JPanel();
                  installCygwinPackageRadio = new javax.swing.JRadioButton();
                  jPanel5 = new javax.swing.JPanel();
                  installVegClientPackageRadio = new javax.swing.JRadioButton();
                  loginPane = new javax.swing.JPanel();
                  jLabel1 = new javax.swing.JLabel();
                  emailAddressTextField = new javax.swing.JTextField();
                  installFromLocalPane = new javax.swing.JPanel();
                  installFromLocalDirectoryCheckBox = new javax.swing.JCheckBox();
                  startInstallPane = new javax.swing.JPanel();
                  continueInstallProcessButton = new javax.swing.JButton();
                  messagePanel = new javax.swing.JPanel();
                  jPanel2 = new javax.swing.JPanel();
                  jLabel2 = new javax.swing.JLabel();
                  messageTextScroller = new javax.swing.JScrollPane();
                  messageTextArea = new javax.swing.JTextArea();
                  
                  getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));
                  
                  addWindowListener(new java.awt.event.WindowAdapter() {
                      public void windowClosing(java.awt.event.WindowEvent evt) {
                          exitForm(evt);
                      }
                  });
                  
                  mainPane.setLayout(new javax.swing.BoxLayout(mainPane, javax.swing.BoxLayout.Y_AXIS));
                  
                  installFromLocationPane.setLayout(new javax.swing.BoxLayout(installFromLocationPane, javax.swing.BoxLayout.Y_AXIS));
                  
                  installFromServerPane.setLayout(new javax.swing.BoxLayout(installFromServerPane, javax.swing.BoxLayout.Y_AXIS));
                  
                  installFromServerPane.setBorder(new javax.swing.border.EtchedBorder());
                  remoteInstallOptionsPane.setLayout(new javax.swing.BoxLayout(remoteInstallOptionsPane, javax.swing.BoxLayout.Y_AXIS));
                  
                  jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
                  
                  installFromInternetCheckBox.setSelected(true);
                  installFromInternetCheckBox.setText("Install From Internet");
                  installFromInternetCheckBox.setActionCommand(" Install From Internet");
                  jPanel3.add(installFromInternetCheckBox);
                  
                  remoteInstallOptionsPane.add(jPanel3);
                
                jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
                  
                  installCygwinPackageRadio.setText("Install Cygwin Environment");
                  installCygwinPackageRadio.addActionListener(new java.awt.event.ActionListener() {
                      public void actionPerformed(java.awt.event.ActionEvent evt) {
                          installCygwinPackageRadioActionPerformed(evt);
                      }
                  });
                  
                  jPanel4.add(installCygwinPackageRadio);
                  
                  remoteInstallOptionsPane.add(jPanel4);
                
                jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
                  
                  installVegClientPackageRadio.setText("Install Veg Database Client");
                  jPanel5.add(installVegClientPackageRadio);
                  
                  remoteInstallOptionsPane.add(jPanel5);
                
                installFromServerPane.add(remoteInstallOptionsPane);
              
              loginPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
                
                jLabel1.setText("Email Address:");
                loginPane.add(jLabel1);
                
                emailAddressTextField.setBackground(java.awt.Color.pink);
                emailAddressTextField.setPreferredSize(new java.awt.Dimension(200, 20));
                emailAddressTextField.setMinimumSize(new java.awt.Dimension(10, 20));
                loginPane.add(emailAddressTextField);
                
                installFromServerPane.add(loginPane);
              
              installFromLocationPane.add(installFromServerPane);
            
            installFromLocalPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
              
              installFromLocalDirectoryCheckBox.setText("Install From Local Directory");
              installFromLocalDirectoryCheckBox.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      installFromLocalDirectoryCheckBoxActionPerformed(evt);
                  }
              });
              
              installFromLocalPane.add(installFromLocalDirectoryCheckBox);
              
              installFromLocationPane.add(installFromLocalPane);
            
            mainPane.add(installFromLocationPane);
          
          startInstallPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
            
            continueInstallProcessButton.setText("Continue");
            continueInstallProcessButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    continueInstallProcessButtonActionPerformed(evt);
                }
            });
            
            startInstallPane.add(continueInstallProcessButton);
            
            mainPane.add(startInstallPane);
          
          messagePanel.setLayout(new javax.swing.BoxLayout(messagePanel, javax.swing.BoxLayout.Y_AXIS));
              
              jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
              
              jLabel2.setText("Activity:");
              jPanel2.add(jLabel2);
              
              messagePanel.add(jPanel2);
            
            messageTextArea.setBackground(java.awt.Color.pink);
              messageTextArea.setPreferredSize(new java.awt.Dimension(300, 16));
              messageTextArea.setMinimumSize(new java.awt.Dimension(300, 16));
              messageTextScroller.setViewportView(messageTextArea);
              
              messagePanel.add(messageTextScroller);
            
            mainPane.add(messagePanel);
          
          getContentPane().add(mainPane);
        
    }//GEN-END:initComponents
    /**
     * method that allows the user to install the package(s) from a local file system
     */
    private void installFromLocalDirectoryCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_installFromLocalDirectoryCheckBoxActionPerformed
        // Add your handling code here:
        //if this is selected warn the user that the option is not currently available
        //that the install will work from the ESA database server until an official release
        //of the software is made
        if ( installFromLocalDirectoryCheckBox.isSelected() == true )
        {
            debug(0, "this option will not be supported until an official relese");
            installFromLocalDirectoryCheckBox.setSelected(false);
        }
    }//GEN-LAST:event_installFromLocalDirectoryCheckBoxActionPerformed
    /**
     * method that handles the selection of the 'install cygwin envirnonment' -- currently
     * warn the user that this is a really large package and should be users who are 
     * interested in further developelent of the vegetation database client
     */
    private void installCygwinPackageRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_installCygwinPackageRadioActionPerformed
        // Add your handling code here:
        //if the user has selected the cygwin package warn them
        if (installCygwinPackageRadio.isSelected() == true )
        {
            debug(0, "this package is very large (55MB) and is intended for software developers");
        }
    }//GEN-LAST:event_installCygwinPackageRadioActionPerformed

    
    	
  /**
   * Print debugging messages based on severity level, where severity level 1
   * are the most critical and higher numbers are more trivial messages.
   * Messages with severity 1 to 4 will result in an error dialog box for the
   * user to inspect.  Those with severity 5-9 result in a warning dialog
   * box for the user to inspect.  Those with severity greater than 9 are
   * printed only to standard error.
   * Setting the debug_level to 0 in the configuration file turns all messages
   * off.
   *
   * @param severity the severity of the debug message
   * @param message the message to log
   */
  public static void debug(int severity, String message)
  {
//    if (debug) {
//      if (debug_level > 0 && severity <= debug_level) {
        // Show a dialog for severe errors
//        if (severity < 5) {
          JOptionPane.showMessageDialog(null, message, "Error!",
                                        JOptionPane.ERROR_MESSAGE);
//        } else if (severity < 10) {
//          JOptionPane.showMessageDialog(null, message, "Warning!",
 //                                       JOptionPane.WARNING_MESSAGE);
//        }

        // Everything gets printed to standard error
        System.err.println(message);
 //     }
 //   }
  } 

  private void continueInstallProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueInstallProcessButtonActionPerformed
// Add your handling code here:
      if ( (emailAddressTextField.getText()  == null ) || (emailAddressTextField.getText().length() < 2 ) ) 
      {
          debug(0, "please enter a valid email address");
      }
      //make sure that the email is a valid one
      else if ( emailAddressTextField.getText().indexOf("@") < 0  )
      {
          debug(0, "please enter a valid email address -- \"@\" not found ");
      }
      else
      {
          //install both the vegclient and the cygwin packages
          if ( installCygwinPackageRadio.isSelected() == true  && installVegClientPackageRadio.isSelected() == true ) 
          {
                //debug(0, "option not valid");
                installer.submitEmailAddress( emailAddressTextField.getText() );
                installer.getCygwinPackage();
                installer.getVegClientPackage();
                installer.extractPackage("cygwin");
                installer.extractPackage("vegClient");
                installer.initCygwinInstall();
          
                //now initiate the datbase system
                //installer.initDatabase();
                new VegClassInstallerInterface().show();
              
          }
          else if ( installCygwinPackageRadio.isSelected() == true  && installVegClientPackageRadio.isSelected() == false )
          {
            debug(0, "Cannot install Embedded DB w/o the client software");
          }
          //just the vegclient is desired -- this should be what most of the 
          //users will want
          else if ( installCygwinPackageRadio.isSelected() == false  && installVegClientPackageRadio.isSelected() == true )
          {
             messageTextArea.setText("Downloading the vegetation software package");
             //submit the email address
             installer.submitEmailAddress( emailAddressTextField.getText() );
             // download the appropriate package to the install directory
             installer.getVegClientPackage();
            
            //pass the process off to the 
            new VegClassInstallerInterface().show();
            //installer.getVegClientPackage();
            //installer.extractPackage("vegClient");
          }
      }
      System.out.println("Starting the Install Process");
  }//GEN-LAST:event_continueInstallProcessButtonActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit (0);
        //this.dispose();
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    public static void main (String args[]) {
        new InstallerInterface ().show ();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainPane;
    private javax.swing.JPanel installFromLocationPane;
    private javax.swing.JPanel installFromServerPane;
    private javax.swing.JPanel remoteInstallOptionsPane;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JCheckBox installFromInternetCheckBox;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton installCygwinPackageRadio;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton installVegClientPackageRadio;
    private javax.swing.JPanel loginPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField emailAddressTextField;
    private javax.swing.JPanel installFromLocalPane;
    private javax.swing.JCheckBox installFromLocalDirectoryCheckBox;
    private javax.swing.JPanel startInstallPane;
    private javax.swing.JButton continueInstallProcessButton;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane messageTextScroller;
    private javax.swing.JTextArea messageTextArea;
    // End of variables declaration//GEN-END:variables

}
