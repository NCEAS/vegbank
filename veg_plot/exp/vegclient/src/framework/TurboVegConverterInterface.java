/**
 * TurboVegConverterInterface.java
 *
 * Created on September 19, 2001, 9:10 AM
 *
 *
 *  Authors: @author@
 *  Release: @release@
 *	
 *  '$Author: harris $'
 *  '$Date: 2001-10-11 17:55:24 $'
 * 	'$Revision: 1.2 $'
 */
package vegclient.framework;

import java.io.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

import vegclient.framework.*;

/**
 *
 * @author  harris
 */
public class TurboVegConverterInterface extends javax.swing.JFrame {

    //the turboveg export file
    String exportFile = null;
    
    ProjectManager manager = new ProjectManager();
    ClientFramework framework = new ClientFramework();
    
    //this is the class that handles the conversion of a turbo veg file
    //into the xml document consistent with the plots standard
    TurboVegConverter converter = new TurboVegConverter();
    
    /** Creates new form TurboVegConverterInterface */
    public TurboVegConverterInterface() {
        
        initComponents();
        setSize(400, 300);
        setTitle("TurboVegConverterInterface build: @release@");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        mainPane = new javax.swing.JPanel();
        fileSelectionPane = new javax.swing.JPanel();
        infilePanel = new javax.swing.JPanel();
        selectExportFileButton = new javax.swing.JButton();
        selectedFileTextField = new javax.swing.JTextField();
        outFilePanel = new javax.swing.JPanel();
        outFileLabel = new javax.swing.JLabel();
        outFileTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        continueButton = new javax.swing.JButton();
        
        jMenuItem1.setText("Item");
        jPopupMenu1.add(jMenuItem1);
        
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));
        
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        
        mainPane.setLayout(new javax.swing.BoxLayout(mainPane, javax.swing.BoxLayout.Y_AXIS));
        
        fileSelectionPane.setLayout(new javax.swing.BoxLayout(fileSelectionPane, javax.swing.BoxLayout.Y_AXIS));
        
        fileSelectionPane.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        infilePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        
        selectExportFileButton.setForeground(java.awt.Color.blue);
        selectExportFileButton.setFont(new java.awt.Font("Default", 0, 12));
        selectExportFileButton.setText("Select Export File");
        selectExportFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectExportFileButtonActionPerformed(evt);
            }
        });
        
        infilePanel.add(selectExportFileButton);
        
        selectedFileTextField.setBackground(java.awt.Color.pink);
        selectedFileTextField.setPreferredSize(new java.awt.Dimension(160, 17));
        infilePanel.add(selectedFileTextField);
        
        fileSelectionPane.add(infilePanel);
        
        outFilePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        
        outFilePanel.setPreferredSize(new java.awt.Dimension(10, 4));
        outFileLabel.setText("Save Transformed File To:");
        outFileLabel.setForeground(java.awt.Color.blue);
        outFileLabel.setFont(new java.awt.Font("Default", 0, 12));
        outFilePanel.add(outFileLabel);
        
        outFileTextField.setBackground(java.awt.Color.pink);
        outFileTextField.setPreferredSize(new java.awt.Dimension(160, 17));
        outFilePanel.add(outFileTextField);
        
        fileSelectionPane.add(outFilePanel);
        
        mainPane.add(fileSelectionPane);
        
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        
        continueButton.setForeground(java.awt.Color.blue);
        continueButton.setFont(new java.awt.Font("Default", 0, 12));
        continueButton.setText("continue");
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });
        
        jPanel5.add(continueButton);
        
        mainPane.add(jPanel5);
        
        getContentPane().add(mainPane);
        
        pack();
    }//GEN-END:initComponents
    /**
     * this method handles the transformation of the turboVeg export file 
     * into the plots standard xml file
     */
    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
        // Add your handling code here:
        if (converter.isValidTurboVegFile(exportFile) == true)
        {
            if ( outFileTextField.getText() == null  ||  outFileTextField.getText().length() < 2 )
            {
             manager.debug(0, "please fill name the transformed file");   
            }
            else
            {
                System.out.println(exportFile+ " is a valid turboVeg export file");
                //now transform the file
                String outFile = outFileTextField.getText().trim();
                System.out.println("Saving file to: "+outFile );
                new TurboVegConverter(exportFile, outFile);
                //show the user the options for viewing, editing, loading the dataset
                manager.postTransformationOptions();
            }
        }
        else
        {
            manager.debug(0, "not a valid turboVeg export file");
            System.out.println(exportFile+ " is NOT a valid turboVeg export file");
           
        }
    }//GEN-LAST:event_continueButtonActionPerformed
    /**
     * method that hadles the selection of a turboveg export file and
     * valiadates that the export file is indeed a valid xml file
     */
    private void selectExportFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectExportFileButtonActionPerformed
        //do the file selection using the fileChooser method
        
        //String fileName = fileChooser(evt, selectedFileTextField);
        String fileName = framework.fileChooser();
        if (fileName.indexOf("xml") < 0 )
        {
            manager.debug(1, "not an xml file");
        }
        else
        {
            exportFile = fileName;
            selectedFileTextField.setText( fileName );
        }
    }//GEN-LAST:event_selectExportFileButtonActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(1);
        this.dispose();
    }//GEN-LAST:event_exitForm

    
    
      		 
	/**
	 * method that updates a textarea with the name of the file that is chosen
	 * @param e -- the action event
	 * @param textFieldName -- the JTextArea that should be updated with the name
	 * of the chosen file
	 *
	 */
	public String fileChooser(ActionEvent e,  JTextField textFieldName) 
	{
		System.out.println( e.getActionCommand()+" "+e.paramString() );
		FileDialog d = new FileDialog(
		TurboVegConverterInterface.this,
		"what file do you want");
		d.setFile("*.xml");
		d.setDirectory(".");
		d.show();
		String yourfile = "*.*";
		if ((yourfile = d.getFile()) != null) {
		textFieldName.setText(yourfile);}
		else
		textFieldName.setText("Guess there is no file");
                return( yourfile );
        }
	
        
        
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new TurboVegConverterInterface().show();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel mainPane;
    private javax.swing.JPanel fileSelectionPane;
    private javax.swing.JPanel infilePanel;
    private javax.swing.JButton selectExportFileButton;
    private javax.swing.JTextField selectedFileTextField;
    private javax.swing.JPanel outFilePanel;
    private javax.swing.JLabel outFileLabel;
    private javax.swing.JTextField outFileTextField;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton continueButton;
    // End of variables declaration//GEN-END:variables

}
