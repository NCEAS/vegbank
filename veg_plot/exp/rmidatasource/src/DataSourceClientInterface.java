/**
 * '$RCSfile: DataSourceClientInterface.java,v $'
 *
 * Purpose: 
 *
 * '$Author: farrell $'
 * '$Date: 2003-08-21 21:16:43 $'
 * '$Revision: 1.2 $'
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */


import javax.swing.*;
import java.util.*;


/*
 * DataSourceClientInterface.java
 *
 * Created on January 27, 2002, 5:04 PM
 */

/**
 *
 * @author  administrator
 */
public class DataSourceClientInterface extends javax.swing.JFrame {
 private String[] dataSourceTypes = {"TNC ACCESS", "TURBOVEG", "NCVS", "NATIVE XML"};
 private Vector plotList = new Vector();
 private PlotDataSource source = new PlotDataSource();
 //the target plot -- the plot to show
 private String targetPlot = null;
 //the target plugin -- the plugin to use
 private String targetPlugin = null;
    /** Creates new form DataSourceClientInterface */
    
    public DataSourceClientInterface() {
        this.initComponents();
        this.setSize(400,300);
        this.setTitle("--Data Loader--");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
            mainPane = new javax.swing.JPanel();
            dataSourceSelectionPanel = new javax.swing.JPanel();
            dataSourceTypeLabel = new javax.swing.JLabel();
            dataSourceSelection = dataSourceSelection = new javax.swing.JComboBox(dataSourceTypes);
            jPanel2 = new javax.swing.JPanel();
            jScrollPane2 = new javax.swing.JScrollPane();
            choosablePlotsJList = new javax.swing.JList();
            jPanel5 = new javax.swing.JPanel();
            jPanel6 = new javax.swing.JPanel();
            displayPlotButton = new javax.swing.JButton();
            
            getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));
            
            addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosing(java.awt.event.WindowEvent evt) {
                    exitForm(evt);
                }
            });
            
            mainPane.setLayout(new javax.swing.BoxLayout(mainPane, javax.swing.BoxLayout.Y_AXIS));
            
            dataSourceSelectionPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
            
            dataSourceTypeLabel.setText("Data Source Type");
            dataSourceSelectionPanel.add(dataSourceTypeLabel);
            
            dataSourceSelection.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dataSourceSelectionActionPerformed(evt);
                }
            });
            
            dataSourceSelectionPanel.add(dataSourceSelection);
            
            mainPane.add(dataSourceSelectionPanel);
          
          jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));
              
              jPanel2.setPreferredSize(new java.awt.Dimension(250, 120));
              jPanel2.setMaximumSize(new java.awt.Dimension(250, 120));
              choosablePlotsJList.addMouseListener(new java.awt.event.MouseAdapter() {
                  public void mouseClicked(java.awt.event.MouseEvent evt) {
                      choosablePlotsJListMouseClicked(evt);
                  }
              });
              
              jScrollPane2.setViewportView(choosablePlotsJList);
              
              jPanel2.add(jScrollPane2);
            
            mainPane.add(jPanel2);
          
          jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
              
              displayPlotButton.setText("Display Plot");
              displayPlotButton.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      displayPlotButtonActionPerformed(evt);
                  }
              });
              
              jPanel6.add(displayPlotButton);
              
              jPanel5.add(jPanel6);
            
            mainPane.add(jPanel5);
          
          getContentPane().add(mainPane);
        
        pack();
    }//GEN-END:initComponents

    /**
     * method to launch the plot viewer for a specific plot
     */
    private void displayPlotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayPlotButtonActionPerformed
        // Add your handling code here:
        System.out.println("Hit the show plot button");
        System.out.println("launching the plot viewer: " + this.targetPlugin );
        System.out.println("launching the plot viewer: " + this.targetPlot );
        
    }//GEN-LAST:event_displayPlotButtonActionPerformed

   /**
    * method that allows the user to choose the plot that he/she is 
    * interested in 
    */
    private void choosablePlotsJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choosablePlotsJListMouseClicked
        // Add your handling code here:
        System.out.println("clicked on a plot");
       //make the class plot the selected plot
        this.targetPlot =  choosablePlotsJList.getSelectedValue().toString();
        System.out.println("the plot: " + choosablePlotsJList.getSelectedValue().toString() );
    }//GEN-LAST:event_choosablePlotsJListMouseClicked

     /**
     * method that figures out the plot data source plugin that is 
     * chosen, and will update the variable etc..
     */
    private void dataSourceSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataSourceSelectionActionPerformed
        // Add your handling code here:
        plotList.addElement("plot");
        this.targetPlugin = this.dataSourceSelection.getSelectedItem().toString();
        System.out.println("selected Data Source: " +  this.targetPlugin );
        source = new PlotDataSource("TNCPlotsDB");
        //get the list of plots associated with that plugin
        plotList = source.getPlotNames();
        //update the list
        this.choosablePlotsJList.setListData(plotList);
    }//GEN-LAST:event_dataSourceSelectionActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new DataSourceClientInterface().show();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainPane;
    private javax.swing.JPanel dataSourceSelectionPanel;
    private javax.swing.JLabel dataSourceTypeLabel;
    private javax.swing.JComboBox dataSourceSelection;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList choosablePlotsJList;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton displayPlotButton;
    // End of variables declaration//GEN-END:variables

}
