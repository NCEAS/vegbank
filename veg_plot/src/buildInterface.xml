<?xml version="1.0"?>
<!-- 
  * build.xml
  *
  *      Authors: John Harris
  *    Copyright: 2000 Regents of the University of California and the
  *               National Center for Ecological Analysis and Synthesis
  *  Build file for the Ant cross-platform build system for metacat
  *  See http://jakarta.apache.org for details on Ant  
  *  
  * This build file will build the plot database access 
  * module and insert into a working version of the plots 
  * database an xml plot record, then query that database
  * for all plots containing a taxon containing the string
  * "Carya".
  * usage: ant [compile|jar|install|jdoc]
--> 
<project name="plotLoader" default="dist" basedir=".">
	<target name="init">
	<tstamp/>
        <property name="current" value="./" />
	<property name="build" value="interfaceBuild" />
	 <property name="client_build" value="interfaceBuild/client" />
	 <property name="client" value="client" />
	 <property name="utility_src" value="utilities" />
	 <property name="embeddedDB_src" value="embeddedDB" /> 


	<property name="dist" value="dist" />
	<property name="release" value="development"/>
	<property name="src" value="./interface"/>
	<property name="dbAccess_src" value="./plotAccess"/>
	<property name="xml_files" value="../xml"/>
	<filter token="dist" value="dist"/>
	<filter token="version" value="development"/>
	
	<property name="servlet_home" 
                value="D:\\jakarta-tomcat-3.2.1/lib/servlet.jar" />
	<property name="toolsDir" 
                value="D:\\devtools" />
	<property name="devtools" 
                value="D:\\devtools" />	
	<property name="xmlp" 
                value="${toolsDir}/xalan.jar:${toolsDir}/xerces.jar"/>
	<property name="cpath" 
                value="${build}:${xmlp}:${toolsDir}:./"/>
</target>

<target name="prepare" depends="init">
	<mkdir dir="${build}" />
	<mkdir dir="${dist}" />
	<mkdir dir="${client_build}" />
	
<!-- get the resources for the embedded database including the java classes used
to replicate data between the central server and the local database as well as
to optomize the local database  and the database properties file(s)-->
<copydir src="${embeddedDB_src}"
               dest="${build}"
               filtering="yes"
               includes="**.java database.properties"
               excludes="**/CVS* "/>



<!-- get the required xml-related resources required to run the interface tools
these include such things as the style sheets used to show results and the dtd's 
for the plot data and query information --> 

<copydir src="${xml_files}"
               dest="${build}"
               filtering="yes"
               includes="transformMultiPlotSummary.xsl vegPlot2001cv.dtd  
			   vegPlot2001DBTrans.xsl querySpec.xsl vegPlot.dtd plotQuery.dtd"
               excludes="**/CVS* "/>




<!-- get the src for the utility classes which do things like print the plot 
information out as xml documents   -->
               <copydir src="${utility_src}"
               dest="${build}"
               filtering="yes"
               includes="**.java "
               excludes="**/CVS* "/>


<!-- client library src which contains the classes to do such things as request 
data from the servlet   -->
               <copydir src="${client}"
               dest="${client_build}"
               filtering="yes"
               includes="**.java "
               excludes="**/CVS* "/>

<!-- get the database access library which allows the interface tools to
directly query the locala embedded database -->
<copydir src="${dbAccess_src}" 
               dest="${build}" 
               filtering="yes"
               includes="**.java "
               excludes="**/CVS* "/>
	       
<!-- get the source code for the interface classes and the manifest file that is
used to create executable jar file -->

	<copydir src="${src}" 
               dest="${build}" 
               filtering="yes"
               includes="**.java interface.properties manifest"
               excludes="**/CVS* "/>

</target>	
	
	
<!-- compile all the java code -->
<target name="compile" depends="prepare">
	<javac srcdir="${build}" 
	classpath="${cpath}"
	includes="**.java  " 
	destdir="${build}"
	/>
	</target>	
	
<target name="dist" depends="compile">
	<mkdir dir="${dist}/lib" />
	<deltree dir="${dist}" />
	
	
	
<!-- build the executable jar file -->
	<jar jarfile ="${build}/interface.jar"
		basedir="${build}"
		manifest="${build}/manifest"
		includes="${build}/ ** ${src}/test.gif"
		
	/>
</target>		

<!--
<jar jarfile ="${build}/plotAccess.jar"
		basedir="${build}"
		includes="${build}/ database.properties xmlWriter.class dbAccess.class 
		dbConnect.class issueStatement.class plotWriter.class 
		queryStore.class sqlMapper.class transformXML.class utility.class  
		DbConnectionBroker.class"
	/>
-->
<!--
LocalStrings.properties wellQuery9.class wellQuery9.java 
		fileDownload.properties GetURL.class inputReader.class fileDownload.class 
		wellQuery.properties wellQuery.class 
		servletUtility.class viewData.class authenticate.class 
		ViewFile.class pageDirector.class"
		-->

</project>
