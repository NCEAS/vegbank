<?xml version="1.0"?>
<!-- 
  * build.xml
  *
  *	Authors: John Harris
  *	Copyright: 	2000 Regents of the University of California and the
  *							National Center for Ecological Analysis and Synthesis
  *  Build file for the Ant cross-platform build system for metacat
  *  See http://jakarta.apache.org for details on Ant  
  *  
  * This build file will build the plot database access 
  * module and insert into a working version of the plots 
  * database an xml plot record, then query that database
  * for all plots containing a taxon containing the string
  * "Carya".
  * usage: ant [compile|jar|install|jdoc]
--> 
<project name="plotLoader" default="dist" basedir=".">
	<target name="init">
	<tstamp/>
	
	<!-- 
		* Below are the database connection settings
		* that should be customized by the user before 
		* the ant build process is run
		*
		* the default settings are for:
	-->
	<filter token="databaseType" value="postgresql" />
	<filter token="user" value="datauser" />
  <filter token="password" value="pass" />
	<filter token="port" value="1521" />
	<filter token="driverType" value="thin" />
	<filter token="driverClass" value="org.postgresql.Driver" />
	<filter token="connectString" value="jdbc:postgresql://127.0.0.1/nvc" />
	<filter token="databaseName" value="nvc" />
	<filter token="insert.minConnections" value="8" />
	<filter token="insert.maxConnections" value="20" />
	<filter token="query.minConnections" value="4" />
	<filter token="query.maxConnections" value="8" />
	<filter token="maxConnectionUses" value="100" />
	<filter token="resetTime" value="0.01" />
	<filter token="logFile" value="connectionPool.log" />
													


<!--
	<filter token="databaseType" value="postgresql"/>
	<filter token="user" value="nvc" />
	<filter token="password" value="jhhtpass" />
	<filter token="port" value="1521" />
	<filter token="driverType" value="thin" />
	<filter token="driverClass" value="oracle.jdbc.driver.OracleDriver" />
	<filter token="connectString" value="jdbc:oracle:thin:@dev.nceas.ucsb.edu:1521:exp" />
	<filter token="databaseName" value="exp" />
	<filter token="insert.minConnections" value="8" />
	<filter token="insert.maxConnections" value="20" />
	<filter token="query.minConnections" value="4" />
	<filter token="query.maxConnections" value="8" />
	<filter token="maxConnectionUses" value="100" />
	<filter token="resetTime" value="0.01" />
	<filter token="logFile" value="connectionPool.log" />
-->
	
	<property name="current" value="./" />
	<property name="build" value="build" />
	<property name="build_lib" value="${build}/lib" />
	<property name="build_xml" value="${build}/xml" />
	<property name="build_src" value="${build}/src" />
	<property name="build_bin" value="${build}/bin" />
	<property name="build_sql" value="${build}/sql" />
	
	<property name="dist" value="dist" />
	<property name="release" value="development"/>
	<property name="src" value="./plotAccess"/>
	<property name="src_lib" value="../lib"/>
	<property name="src_xml" value="../xml"/>
	<property name="src_bin" value="../bin"/>
	<property name="src_sql" value="../sql"/>
	
	<property name="utilities" value="./utilities"/>
	<filter token="dist" value="dist"/>
	<filter token="version" value="development"/>
	
	<property name="toolsdir"   value="/usr/local/devtools" />
	<property name="localToolsDir"  value="/home/computer/harris/tools" />	
	<property name="xmlp" value="${src_lib}/xalan_1_2_2.jar:${src_lib}/xerces_1_3_1.jar:" />
	<property name="jdbc" value="" />
	<property name="cpath" value="${xmlp}:${jdbc}:${jserv}:${jsdk}:${build}:${localToolsDir}:./"/>

</target>

<target name="prepare" depends="init">
	<mkdir dir="${build}" />
	<mkdir dir="${build_lib}" />
	<mkdir dir="${build_src}" />
	<mkdir dir="${build_sql}" />
	<mkdir dir="${build_xml}" />
	<mkdir dir="${build_bin}" />
	
	<copydir src="${src}" 
		dest="${build_src}" 
		filtering="yes"
		includes=" LocalDbConnectionBroker.java CommunityQueryStore.java  xmlWriter.java queryStore.java 
		PlotDBWriter.java dbConnect.java plotWriter.java 
		dbAccess.java utility.java transformXML.java sqlMapper.java 
		issueStatement.java DbConnectionBroker.java "
		excludes="**/CVS* "
	/>

	<copydir src="${src_xml}" 
		dest="${build_xml}" 
    filtering="yes"
    includes="**.dtd **.xml **.xsl"
    excludes="**/CVS* "
	/>
	
	<copydir src="${src_sql}"
	  dest="${build_sql}"
		filtering="no"
		includes="**.sql"
		excludes="**/CVS* "
	/>
										
	
	<copydir src="${src_lib}" 
		dest="${build_lib}" 
    filtering="no"
    includes="database.properties **.jar "
    excludes="**/CVS* "
	/> 
	


<copyfile src="${src_lib}/database.properties" 
	filtering="yes" 
	dest="${build_src}/database.properties" 
	/>


<!--
	<copy todir="${build_src}"
		filtering="true">
		<fileset dir="${src_lib}/database.properties"/>
	</copy>
-->

<!--
		dest="${build_src}"
		filtering="true"
		includes="database.properties"
		excludes="**/CVS* "
	/>
-->
	<!--
		* set the correct values in the 
		* database properties file
	-->
<!--	
	<replace file="${build_src}/database.properties" 
		token="user=" 
		value="user=testUser"
	/>
-->

	<copydir src="${src_bin}"
		dest="${build_bin}"
		filtering="yes"
		includes="**.sh"
		excludes="**/CVS* "
	/>

	<chmod dir="${build_bin}"
  	perm="a+x"
		includes="**/*.sh"
	/>
					
	
	<!-- grab the utility classes that will be needed for such things as data
	formatting-->  
	<copydir src="${utilities}" 
		dest="${build_src}" 
    filtering="yes"
    includes="PlotDataMapper.java  PlotXmlWriter.java"
    excludes="**/CVS* "
	/>
	 
	
</target>	
	

<target name="compile" depends="prepare">
	
	<javac srcdir="${build_src}" 
		classpath="${cpath}"
		includes="**.java  " 
		destdir="${build_src}"
	/>
</target>	


<target name="dist" depends="compile">

	<!-- make a jar file that one can run anywhere w/o worrying about oracle drivers 
	or XML resources -->
	
	<jar jarfile ="${build_lib}/dbAccess.jar"
		basedir="${build_src}"
		manifest="${src_lib}/manifest"
		includes="${build_src}/ **"
	/>
</target>		

</project>
